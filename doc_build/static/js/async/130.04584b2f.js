"use strict";(self.webpackChunkrepress_demo=self.webpackChunkrepress_demo||[]).push([["130"],{5846:function(e,r,t){t.r(r),t.d(r,{default:()=>d});var n=t(2676),c=t(453);function h(e){let r=Object.assign({h1:"h1",a:"a",p:"p",code:"code",h2:"h2",ul:"ul",li:"li"},(0,c.ah)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(r.h1,{id:"rect",children:["Rect",(0,n.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#rect",children:"#"})]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.code,{children:"UiObject.bounds()"}),", ",(0,n.jsx)(r.code,{children:"UiObject.boundsInParent()"}),"返回的对象。表示一个长方形(范围)。"]}),"\n",(0,n.jsxs)(r.h2,{id:"rectleft",children:["Rect.left",(0,n.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#rectleft",children:"#"})]}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"{number}"}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"长方形左边界的 x 坐标、"}),"\n",(0,n.jsxs)(r.h2,{id:"rectright",children:["Rect.right",(0,n.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#rectright",children:"#"})]}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"{number}"}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"长方形右边界的 x 坐标、"}),"\n",(0,n.jsxs)(r.h2,{id:"recttop",children:["Rect.top",(0,n.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#recttop",children:"#"})]}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"{number}"}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"长方形上边界的 y 坐标、"}),"\n",(0,n.jsxs)(r.h2,{id:"rectbottom",children:["Rect.bottom",(0,n.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#rectbottom",children:"#"})]}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"{number}"}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"长方形下边界的 y 坐标、"}),"\n",(0,n.jsxs)(r.h2,{id:"rectcenterx",children:["Rect.centerX()",(0,n.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#rectcenterx",children:"#"})]}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"返回 {number}"}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"长方形中点 x 坐标。"}),"\n",(0,n.jsxs)(r.h2,{id:"rectcentery",children:["Rect.centerY()",(0,n.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#rectcentery",children:"#"})]}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"返回 {number}"}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"长方形中点 y 坐标。"}),"\n",(0,n.jsxs)(r.h2,{id:"rectwidth",children:["Rect.width()",(0,n.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#rectwidth",children:"#"})]}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"返回 {number}"}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"长方形宽度。通常可以作为控件宽度。"}),"\n",(0,n.jsxs)(r.h2,{id:"rectheight",children:["Rect.height()",(0,n.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#rectheight",children:"#"})]}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"返回 {number}"}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"长方形高度。通常可以作为控件高度。"}),"\n",(0,n.jsxs)(r.h2,{id:"rectcontainsr",children:["Rect.contains(r)",(0,n.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#rectcontainsr",children:"#"})]}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:["r ",(0,n.jsx)(r.a,{href:"#rect",children:"Rect"})]}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"返回是否包含另一个长方形 r。包含指的是，长方形 r 在该长方形的里面(包含边界重叠的情况)。"}),"\n",(0,n.jsxs)(r.h2,{id:"rectintersectr",children:["Rect.intersect(r)",(0,n.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#rectintersectr",children:"#"})]}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:["r ",(0,n.jsx)(r.a,{href:"#rect",children:"Rect"})]}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"返回是否和另一个长方形相交。"})]})}function i(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:r}=Object.assign({},(0,c.ah)(),e.components);return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}let d=i;i.__RSPRESS_PAGE_META={},i.__RSPRESS_PAGE_META["v1%2F%E5%9F%BA%E7%A1%80%2FwidgetsBasedAutomation%2Frect.md"]={toc:[{text:"Rect.left",id:"rectleft",depth:2},{text:"Rect.right",id:"rectright",depth:2},{text:"Rect.top",id:"recttop",depth:2},{text:"Rect.bottom",id:"rectbottom",depth:2},{text:"Rect.centerX()",id:"rectcenterx",depth:2},{text:"Rect.centerY()",id:"rectcentery",depth:2},{text:"Rect.width()",id:"rectwidth",depth:2},{text:"Rect.height()",id:"rectheight",depth:2},{text:"Rect.contains(r)",id:"rectcontainsr",depth:2},{text:"Rect.intersect(r)",id:"rectintersectr",depth:2}],title:"Rect",headingTitle:"Rect",frontmatter:{}}}}]);