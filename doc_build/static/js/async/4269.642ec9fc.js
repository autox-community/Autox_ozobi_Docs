"use strict";(self.webpackChunkrepress_demo=self.webpackChunkrepress_demo||[]).push([["4269"],{8242:function(e,r,n){n.r(r),n.d(r,{default:()=>l});var d=n(2676),i=n(453);function c(e){let r=Object.assign({h1:"h1",a:"a",p:"p",pre:"pre",code:"code",strong:"strong",ul:"ul",li:"li"},(0,i.ah)(),e.components);return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsxs)(r.h1,{id:"单选框控件-radio",children:["单选框控件: radio",(0,d.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#单选框控件-radio",children:"#"})]}),"\n",(0,d.jsx)(r.p,{children:"单选按钮用于在多个互斥的选项中选择一个。在 Auto.js 中，通常将多个单选按钮放在一个 RadioGroup 中，以确保只能选择其中一个。"}),"\n",(0,d.jsx)(r.p,{children:"创建单选按钮"}),"\n",(0,d.jsx)(r.p,{children:"以下是一个创建单选按钮的示例代码："}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{className:"language-js",children:'"ui";\r\n\r\nui.layout(\r\n    <vertical padding="16">\r\n        <radiogroup id="rg">\r\n            <radio id="rb1" text="选项1" checked="{{true}}" />\r\n            <radio id="rb2" text="选项2" />\r\n            <radio id="rb3" text="选项3" />\r\n        </radiogroup>\r\n        <button id="btnGetSelected" text="获取选中的选项" />\r\n    </vertical>\r\n);\n'})}),"\n",(0,d.jsx)(r.p,{children:"在上述代码中："}),"\n",(0,d.jsxs)(r.p,{children:[(0,d.jsx)(r.code,{children:'<radiogroup id="rg">'}),":定义了一个单选按钮组，所有包含在其中的单选按钮将互斥。"]}),"\n",(0,d.jsxs)(r.p,{children:[(0,d.jsx)(r.code,{children:'<radio id="rb1" text="选项1" checked="{{true}}" /> '}),":创建了一个单选按钮，并设置了初始状态为选中。\r\n其他两个单选按钮（",(0,d.jsx)(r.code,{children:"rb2"}),"和",(0,d.jsx)(r.code,{children:"rb3"}),"）初始状态为未选中。"]}),"\n",(0,d.jsx)(r.p,{children:"获取选中的单选按钮"}),"\n",(0,d.jsx)(r.p,{children:"要获取当前选中的单选按钮，可以通过遍历 RadioGroup 中的单选按钮来实现。"}),"\n",(0,d.jsx)(r.p,{children:"以下是一个获取选中单选按钮的示例代码："}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{className:"language-js",children:'ui.btnGetSelected.on("click", function () {\r\n    for (let i = 0; i < ui.rg.getChildCount(); i++) {\r\n        let radio = ui.rg.getChildAt(i);\r\n        if (radio.checked) {\r\n            toast("选中的选项：" + radio.text);\r\n            break;\r\n        }\r\n    }\r\n});\n'})}),"\n",(0,d.jsx)(r.p,{children:"在上述代码中："}),"\n",(0,d.jsxs)(r.p,{children:[(0,d.jsx)(r.code,{children:"ui.rg.getChildCount()"}),":获取单选按钮组中的子控件数量。"]}),"\n",(0,d.jsxs)(r.p,{children:[(0,d.jsx)(r.code,{children:"ui.rg.getChildAt(i)"}),":获取第 i 个子控件（即单选按钮）。"]}),"\n",(0,d.jsxs)(r.p,{children:[(0,d.jsx)(r.code,{children:" radio.checked"}),":判断当前单选按钮是否被选中。"]}),"\n",(0,d.jsxs)(r.p,{children:[(0,d.jsx)(r.code,{children:' toast("选中的选项：" + radio.text)'}),":显示当前选中的选项文本。"]}),"\n",(0,d.jsx)(r.p,{children:(0,d.jsx)(r.strong,{children:"官方教程："})}),"\n",(0,d.jsx)(r.p,{children:"单选框只能选中一个选项，一般与 radiogroup 搭配使用。"}),"\n",(0,d.jsxs)(r.p,{children:["参见 Android ",(0,d.jsx)(r.a,{href:"https://developer.android.google.cn/reference/android/widget/RadioButton",target:"_blank",rel:"noopener noreferrer",children:"RadioButton"})]}),"\n",(0,d.jsxs)(r.p,{children:[(0,d.jsx)(r.code,{children:"text"}),":"]}),"\n",(0,d.jsxs)(r.p,{children:["radio 控件的文本，显示在单选框后面。实际上 radio 控件也继承于",(0,d.jsx)(r.a,{href:"http://localhost/docs/zh/v8/ui/advanced.html#%E6%96%87%E6%9C%AC%E6%8E%A7%E4%BB%B6-text",target:"_blank",rel:"noopener noreferrer",children:"text"}),"和",(0,d.jsx)(r.a,{href:"http://localhost/docs/zh/v8/ui/advanced.html#%E6%8C%89%E9%92%AE%E6%8E%A7%E4%BB%B6-button",target:"_blank",rel:"noopener noreferrer",children:"button"}),"控件，它们的属性也可以用在 radio 上，比如",(0,d.jsx)(r.code,{children:"textSize"}),", ",(0,d.jsx)(r.code,{children:"textStyle"}),"。"]}),"\n",(0,d.jsxs)(r.p,{children:[(0,d.jsx)(r.code,{children:"checked"}),":"]}),"\n",(0,d.jsxs)(r.p,{children:["设置 radio 单选框的选中状态，当",(0,d.jsx)(r.code,{children:'checked="true"'}),"为选中选项框，否则为未选中选项框。"]}),"\n",(0,d.jsxs)(r.p,{children:[(0,d.jsx)(r.code,{children:"enabled"}),":"]}),"\n",(0,d.jsxs)(r.p,{children:["设置单选框是否是启用的，若",(0,d.jsx)(r.code,{children:'enabled="false"'}),"则为禁用状态，显示未灰色，无法交互。"]}),"\n",(0,d.jsxs)(r.p,{children:[(0,d.jsx)(r.code,{children:"isChecked()"}),":"]}),"\n",(0,d.jsxs)(r.ul,{children:["\n",(0,d.jsx)(r.li,{children:"返回 {boolean}"}),"\n"]}),"\n",(0,d.jsxs)(r.p,{children:["返回选项框是否被选中，是则返回",(0,d.jsx)(r.code,{children:"true"}),"，否则返回",(0,d.jsx)(r.code,{children:"false"}),"。例如",(0,d.jsx)(r.code,{children:"$ui.radio1.isChecked()"}),"。"]}),"\n",(0,d.jsxs)(r.p,{children:[(0,d.jsx)(r.code,{children:"check"}),":"]}),"\n",(0,d.jsxs)(r.ul,{children:["\n",(0,d.jsxs)(r.li,{children:[(0,d.jsx)(r.code,{children:"checked"})," {boolean} 是否被勾选"]}),"\n",(0,d.jsxs)(r.li,{children:[(0,d.jsx)(r.code,{children:"view"})," {View} 当前事件的 View"]}),"\n"]}),"\n",(0,d.jsx)(r.p,{children:"当用户勾选/取消勾选选项框时会触发该事件。"}),"\n",(0,d.jsx)(r.p,{children:"例子："}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{className:"language-js",children:'"ui";\r\n\r\nui.layout(\r\n    <vertical padding="16">\r\n        <radio id="radio1" text="单选框1" />\r\n        <radio id="radio2" text="单选框2" />\r\n        <radio id="radio3" text="已勾选的单选框3" checked="true" />\r\n    </vertical>\r\n);\r\n// 监听单个radio的选中\r\n$ui.radio2.on("check", (checked) => {\r\n    if (checked) {\r\n        toastLog("单选框2被勾选了");\r\n    } else {\r\n        toastLog("单选框2被取消勾选了");\r\n    }\r\n});\n'})})]})}function s(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:r}=Object.assign({},(0,i.ah)(),e.components);return r?(0,d.jsx)(r,{...e,children:(0,d.jsx)(c,{...e})}):c(e)}let l=s;s.__RSPRESS_PAGE_META={},s.__RSPRESS_PAGE_META["v1%2F%E5%9F%BA%E7%A1%80%2Fui%2Fradio.md"]={toc:[],title:"单选框控件: radio",headingTitle:"单选框控件: radio",frontmatter:{}}}}]);