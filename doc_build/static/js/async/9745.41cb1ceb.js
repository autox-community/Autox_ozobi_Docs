"use strict";(self.webpackChunkrepress_demo=self.webpackChunkrepress_demo||[]).push([["9745"],{633:function(i,e,n){n.r(e),n.d(e,{default:()=>p});var d=n(2676),r=n(453);let a=n.p+"static/image/ex-padding.064f405a.png",h=n.p+"static/image/ex-marginLeft.a6736584.png",s=n.p+"static/image/ex2-margin.175cde5a.png",t=n.p+"static/image/ex1-margin.f46ead50.png",c=n.p+"static/image/ex-layout-gravity.6484d4a7.png",l=n.p+"static/image/ex-gravity.e4a9f77b.png",o=n.p+"static/image/ex-w.291b40a3.png";function x(i){let e=Object.assign({h1:"h1",a:"a",p:"p",code:"code",h2:"h2",strong:"strong",pre:"pre",img:"img",ul:"ul",li:"li"},(0,r.ah)(),i.components);return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsxs)(e.h1,{id:"视图-view",children:["视图: View",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#视图-view",children:"#"})]}),"\n",(0,d.jsxs)(e.p,{children:["控件和布局都继承于视图(View)。\n本节将介绍视图(View)的属性和方法，这些属性和方法可在所有控件和布局中使用，例如",(0,d.jsx)(e.a,{href:"#bg",children:"背景"}),"，",(0,d.jsx)(e.a,{href:"#w",children:"宽"}),(0,d.jsx)(e.a,{href:"#h",children:"高"}),"，点击回调",(0,d.jsx)(e.code,{children:"click()"}),"等。"]}),"\n",(0,d.jsxs)(e.h2,{id:"w",children:["w",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#w",children:"#"})]}),"\n",(0,d.jsxs)(e.p,{children:["View的宽度，是属性",(0,d.jsx)(e.code,{children:"width"}),"的缩写形式。可以设置的值为",(0,d.jsx)(e.code,{children:"*"}),", ",(0,d.jsx)(e.code,{children:"auto"}),"和具体数值。其中",(0,d.jsx)(e.code,{children:"*"}),"表示宽度",(0,d.jsx)(e.strong,{children:"尽量"}),"填满父布局，而",(0,d.jsx)(e.code,{children:"auto"}),"表示宽度将根据View的内容自动调整(自适应宽度)。例如："]}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-javascript",children:'"ui";\nui.layout(\n    <horizontal>\n        <button w="auto" text="自适应宽度"/>\n        <button w="*" text="填满父布局"/>\n    </horizontal>\n);\n'})}),"\n",(0,d.jsx)(e.p,{children:"在这个例子中，第一个按钮为自适应宽度，第二个按钮为填满父布局，显示效果为："}),"\n",(0,d.jsx)(e.p,{children:(0,d.jsx)("img",{src:o,alt:"ex-w"})}),"\n",(0,d.jsxs)(e.p,{children:["如果不设置该属性，则不同的控件和布局有不同的默认宽度，大多数为",(0,d.jsx)(e.code,{children:"auto"}),"。"]}),"\n",(0,d.jsxs)(e.p,{children:["宽度属性也可以指定一个具体数值。例如",(0,d.jsx)(e.code,{children:'w="20"'}),"，",(0,d.jsx)(e.code,{children:'w="20px"'}),"等。不加单位的情况下默认单位为dp，其他单位包括px(像素), mm(毫米), in(英寸)。有关尺寸单位的更多内容，参见",(0,d.jsx)(e.a,{href:"#ui_%E5%B0%BA%E5%AF%B8%E7%9A%84%E5%8D%95%E4%BD%8D_Dimension",children:"尺寸的单位: Dimension"}),"。"]}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-javascript",children:'"ui";\nui.layout(\n    <horizontal>\n        <button w="200" text="宽度200dp"/>\n        <button w="100" text="宽度100dp"/>\n    </horizontal>\n);\n'})}),"\n",(0,d.jsxs)(e.h2,{id:"h",children:["h",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#h",children:"#"})]}),"\n",(0,d.jsxs)(e.p,{children:["View的高度，是属性",(0,d.jsx)(e.code,{children:"height"}),"的缩写形式。可以设置的值为",(0,d.jsx)(e.code,{children:"*"}),", ",(0,d.jsx)(e.code,{children:"auto"}),"和具体数值。其中",(0,d.jsx)(e.code,{children:"*"}),"表示宽度",(0,d.jsx)(e.strong,{children:"尽量"}),"填满父布局，而",(0,d.jsx)(e.code,{children:"auto"}),"表示宽度将根据View的内容自动调整(自适应宽度)。"]}),"\n",(0,d.jsxs)(e.p,{children:["如果不设置该属性，则不同的控件和布局有不同的默认高度，大多数为",(0,d.jsx)(e.code,{children:"auto"}),"。"]}),"\n",(0,d.jsxs)(e.p,{children:["宽度属性也可以指定一个具体数值。例如",(0,d.jsx)(e.code,{children:'h="20"'}),"，",(0,d.jsx)(e.code,{children:'h="20px"'}),"等。不加单位的情况下默认单位为dp，其他单位包括px(像素), mm(毫米), in(英寸)。有关尺寸单位的更多内容，参见",(0,d.jsx)(e.a,{href:"#ui_%E5%B0%BA%E5%AF%B8%E7%9A%84%E5%8D%95%E4%BD%8D_Dimension",children:"尺寸的单位: Dimension"}),"。"]}),"\n",(0,d.jsxs)(e.h2,{id:"id",children:["id",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#id",children:"#"})]}),"\n",(0,d.jsx)(e.p,{children:"View的id，用来区分一个界面下的不同控件和布局，一个界面的id在同一个界面下通常是唯一的，也就是一般不存在两个View有相同的id。id属性也是连接xml布局和JavaScript代码的桥梁，在代码中可以通过一个View的id来获取到这个View，并对他进行操作(设置点击动作、设置属性、获取属性等)。例如："}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-javascript",children:'"ui";\nui.layout(\n    <frame>\n        <button id="ok" text="确定"/>\n    </frame>\n);\n//通过ui.ok获取到按钮控件\ntoast(ui.ok.getText());\n'})}),"\n",(0,d.jsxs)(e.p,{children:['这个例子中有一个按钮控件"确定"，id属性为"ok"，那么我们可以在代码中使用',(0,d.jsx)(e.code,{children:"ui.ok"}),"来获取他，再通过",(0,d.jsx)(e.code,{children:"getText()"}),"函数获取到这个按钮控件的文本内容。\n另外这个例子中使用帧布局(frame)是因为，我们只有一个控件，因此用于最简单的布局帧布局。"]}),"\n",(0,d.jsxs)(e.h2,{id:"gravity",children:["gravity",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#gravity",children:"#"})]}),"\n",(0,d.jsx)(e.p,{children:'View的"重力"。用于决定View的内容相对于View的位置，可以设置的值为:'}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.code,{children:"left"})," 靠左"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.code,{children:"right"})," 靠右"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.code,{children:"top"})," 靠顶部"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.code,{children:"bottom"})," 靠底部"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.code,{children:"center"})," 居中"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.code,{children:"center_vertical"})," 垂直居中"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.code,{children:"center_horizontal"})," 水平居中"]}),"\n"]}),"\n",(0,d.jsxs)(e.p,{children:["例如对于一个按钮控件，",(0,d.jsx)(e.code,{children:'gravity="right"'}),"会使其中的文本内容靠右显示。例如："]}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-javascript",children:'"ui";\nui.layout(\n    <frame>\n        <button gravity="right" w="*" h="auto" text="靠右的文字"/>\n    </frame>\n);\n'})}),"\n",(0,d.jsx)(e.p,{children:"显示效果为:"}),"\n",(0,d.jsx)(e.p,{children:(0,d.jsx)("img",{src:l,alt:"ex-gravity"})}),"\n",(0,d.jsxs)(e.p,{children:["这些属性是可以组合的，例如",(0,d.jsx)(e.code,{children:'gravity="right|bottom"'}),"的View他的内容会在右下角。"]}),"\n",(0,d.jsxs)(e.h2,{id:"layout_gravity",children:["layout_gravity",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#layout_gravity",children:"#"})]}),"\n",(0,d.jsxs)(e.p,{children:['View在布局中的"重力"，用于决定View本身在他的',(0,d.jsx)(e.strong,{children:"父布局"}),"的位置，可以设置的值和gravity属性相同。注意把这个属性和gravity属性区分开来。"]}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-javascript",children:'"ui";\nui.layout(\n    <frame w="*" h="*">\n        <button layout_gravity="center" w="auto" h="auto" text="居中的按钮"/>\n        <button layout_gravity="right|bottom" w="auto" h="auto" text="右下角的按钮"/>\n    </frame>\n);\n'})}),"\n",(0,d.jsxs)(e.p,{children:["在这个例子中，我们让帧布局(frame)的大小占满整个屏幕，通过给第一个按钮设置属性",(0,d.jsx)(e.code,{children:'layout_gravity="center"'}),"来使得按钮在帧布局中居中，通过给第二个按钮设置属性",(0,d.jsx)(e.code,{children:'layout_gravity="right|bottom"'}),"使得他在帧布局中位于右下角。效果如图："]}),"\n",(0,d.jsx)(e.p,{children:(0,d.jsx)("img",{src:c,alt:"ex-layout-gravity"})}),"\n",(0,d.jsx)(e.p,{children:"要注意的是，layout_gravity的属性不一定总是生效的，具体取决于布局的类别。例如不能让水平布局中的第一个子控件靠底部显示(否则和水平布局本身相违背)。"}),"\n",(0,d.jsxs)(e.h2,{id:"margin",children:["margin",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#margin",children:"#"})]}),"\n",(0,d.jsx)(e.p,{children:"margin为View和其他View的间距，即外边距。margin属性包括四个值:"}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.code,{children:"marginLeft"})," 左外边距"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.code,{children:"marginRight"})," 右外边距"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.code,{children:"marginTop"})," 上外边距"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.code,{children:"marginBottom"})," 下外边距"]}),"\n"]}),"\n",(0,d.jsx)(e.p,{children:"而margin属性本身的值可以有三种格式:"}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.code,{children:'margin="marginAll"'})," 指定各个外边距都是该值。例如",(0,d.jsx)(e.code,{children:'margin="10"'}),"表示左右上下边距都是10dp。"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.code,{children:'margin="marginLeft marginTop marginRight marginBottom"'})," 分别指定各个外边距。例如",(0,d.jsx)(e.code,{children:'margin="10 20 30 40"'}),"表示左边距为10dp, 上边距为20dp, 右边距为30dp, 下边距为40dp"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.code,{children:'margin="marginHorizontal marginVertical"'})," 指定水平外边距和垂直外边距。例如",(0,d.jsx)(e.code,{children:'margin="10 20"'}),"表示左右边距为10dp, 上下边距为20dp。"]}),"\n"]}),"\n",(0,d.jsx)(e.p,{children:"用一个例子来具体理解外边距的含义："}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-javascript",children:'"ui";\nui.layout(\n    <horizontal>\n        <button margin="30" text="距离四周30"/>\n        <button text="普通的按钮"/>\n    </horizontal>\n);\n'})}),"\n",(0,d.jsx)(e.p,{children:"第一个按钮的margin属性指定了他的边距为30dp, 也就是他与水平布局以及第二个按钮的间距都是30dp, 其显示效果如图:"}),"\n",(0,d.jsx)(e.p,{children:(0,d.jsx)("img",{src:t,alt:"ex1-margin"})}),"\n",(0,d.jsxs)(e.p,{children:["如果把",(0,d.jsx)(e.code,{children:'margin="30"'}),"改成",(0,d.jsx)(e.code,{children:'margin="10 40"'}),"那么第一个按钮的左右间距为10dp, 上下间距为40dp, 效果如图:"]}),"\n",(0,d.jsx)(e.p,{children:(0,d.jsx)("img",{src:s,alt:"ex2-margin"})}),"\n",(0,d.jsxs)(e.p,{children:["有关margin属性的单位，参见",(0,d.jsx)(e.a,{href:"#ui_%E5%B0%BA%E5%AF%B8%E7%9A%84%E5%8D%95%E4%BD%8D_Dimension",children:"尺寸的单位: Dimension"}),"。"]}),"\n",(0,d.jsxs)(e.h2,{id:"marginleft",children:["marginLeft",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#marginleft",children:"#"})]}),"\n",(0,d.jsxs)(e.p,{children:["View的左外边距。如果该属性和margin属性指定的值冲突，则在后面的属性生效，前面的属性无效，例如",(0,d.jsx)(e.code,{children:'margin="20" marginLeft="10"'}),"的左外边距为10dp，其他外边距为20dp。"]}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{children:'"ui";\nui.layout(\n    <horizontal>\n        <button marginLeft="50" text="距离左边50"/>\n        <button text="普通的按钮"/>\n    </horizontal>\n);\n'})}),"\n",(0,d.jsx)(e.p,{children:"第一个按钮指定了左外边距为50dp，则他和他的父布局水平布局(horizontal)的左边的间距为50dp, 效果如图："}),"\n",(0,d.jsx)(e.p,{children:(0,d.jsx)("img",{src:h,alt:"ex-marginLeft"})}),"\n",(0,d.jsxs)(e.h2,{id:"marginright",children:["marginRight",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#marginright",children:"#"})]}),"\n",(0,d.jsx)(e.p,{children:"View的右外边距。如果该属性和margin属性指定的值冲突，则在后面的属性生效，前面的属性无效。"}),"\n",(0,d.jsxs)(e.h2,{id:"margintop",children:["marginTop",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#margintop",children:"#"})]}),"\n",(0,d.jsx)(e.p,{children:"View的上外边距。如果该属性和margin属性指定的值冲突，则在后面的属性生效，前面的属性无效。"}),"\n",(0,d.jsxs)(e.h2,{id:"marginbottom",children:["marginBottom",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#marginbottom",children:"#"})]}),"\n",(0,d.jsx)(e.p,{children:"View的下外边距。如果该属性和margin属性指定的值冲突，则在后面的属性生效，前面的属性无效。"}),"\n",(0,d.jsxs)(e.h2,{id:"padding",children:["padding",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#padding",children:"#"})]}),"\n",(0,d.jsx)(e.p,{children:"View和他的自身内容的间距，也就是内边距。注意和margin属性区分开来，margin属性是View之间的间距，而padding是View和他自身内容的间距。举个例子，一个文本控件的padding也即文本控件的边缘和他的文本内容的间距，paddingLeft即文本控件的左边和他的文本内容的间距。"}),"\n",(0,d.jsx)(e.p,{children:"paddding属性的值同样有三种格式："}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.code,{children:'padding="paddingAll"'})," 指定各个内边距都是该值。例如",(0,d.jsx)(e.code,{children:'padding="10"'}),"表示左右上下内边距都是10dp。"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.code,{children:'padding="paddingLeft paddingTop paddingRight paddingBottom"'})," 分别指定各个内边距。例如",(0,d.jsx)(e.code,{children:'padding="10 20 30 40"'}),"表示左内边距为10dp, 上内边距为20dp, 右内边距为30dp, 下内边距为40dp"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.code,{children:'padding="paddingHorizontal paddingVertical"'})," 指定水平内边距和垂直内边距。例如",(0,d.jsx)(e.code,{children:'padding="10 20"'}),"表示左右内边距为10dp, 上下内边距为20dp。"]}),"\n"]}),"\n",(0,d.jsx)(e.p,{children:"用一个例子来具体理解内边距的含义："}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{children:'"ui";\nui.layout(\n    <frame w="*" h="*" gravity="center">\n        <text padding="10 20 30 40" bg="#ff0000" w="auto" h="auto" text="HelloWorld"/>\n    </frame>\n);\n'})}),"\n",(0,d.jsxs)(e.p,{children:["这个例子是一个居中的按钮(通过父布局的",(0,d.jsx)(e.code,{children:'gravity="center"'}),"属性设置)，背景色为红色(",(0,d.jsx)(e.code,{children:'bg="#ff0000"'}),')，文本内容为"HelloWorld"，左边距为10dp，上边距为20dp，下边距为30dp，右边距为40dp，其显示效果如图：']}),"\n",(0,d.jsx)(e.p,{children:(0,d.jsx)("img",{src:a,alt:"ex-padding"})}),"\n",(0,d.jsxs)(e.h2,{id:"paddingleft",children:["paddingLeft",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#paddingleft",children:"#"})]}),"\n",(0,d.jsx)(e.p,{children:"View的左内边距。如果该属性和padding属性指定的值冲突，则在后面的属性生效，前面的属性无效。"}),"\n",(0,d.jsxs)(e.h2,{id:"paddingright",children:["paddingRight",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#paddingright",children:"#"})]}),"\n",(0,d.jsx)(e.p,{children:"View的右内边距。如果该属性和padding属性指定的值冲突，则在后面的属性生效，前面的属性无效。"}),"\n",(0,d.jsxs)(e.h2,{id:"paddingtop",children:["paddingTop",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#paddingtop",children:"#"})]}),"\n",(0,d.jsx)(e.p,{children:"View的上内边距。如果该属性和padding属性指定的值冲突，则在后面的属性生效，前面的属性无效。"}),"\n",(0,d.jsxs)(e.h2,{id:"paddingbottom",children:["paddingBottom",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#paddingbottom",children:"#"})]}),"\n",(0,d.jsx)(e.p,{children:"View的下内边距。如果该属性和padding属性指定的值冲突，则在后面的属性生效，前面的属性无效。"}),"\n",(0,d.jsxs)(e.h2,{id:"bg",children:["bg",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#bg",children:"#"})]}),"\n",(0,d.jsxs)(e.p,{children:["View的背景。其值可以是一个链接或路径指向的图片，或者RGB格式的颜色，或者其他背景。具体参见",(0,d.jsx)(e.a,{href:"#draw",children:"Drawables"}),"。"]}),"\n",(0,d.jsxs)(e.p,{children:["例如，",(0,d.jsx)(e.code,{children:'bg="#00ff00"'}),"设置背景为绿色，",(0,d.jsx)(e.code,{children:'bg="file:///sdcard/1.png"'}),'设置背景为图片"1.png"，',(0,d.jsx)(e.code,{children:'bg="?attr/selectableItemBackground"'}),"设置背景为点击时出现的波纹效果(可能需要同时设置",(0,d.jsx)(e.code,{children:'clickable="true"'}),"才生效)。"]}),"\n",(0,d.jsxs)(e.h2,{id:"alpha",children:["alpha",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#alpha",children:"#"})]}),"\n",(0,d.jsxs)(e.p,{children:["View的透明度，其值是一个0~1之间的小数，0表示完全透明，1表示完全不透明。例如",(0,d.jsx)(e.code,{children:'alpha="0.5"'}),"表示半透明。"]}),"\n",(0,d.jsxs)(e.h2,{id:"foreground",children:["foreground",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#foreground",children:"#"})]}),"\n",(0,d.jsx)(e.p,{children:"View的前景。前景即在一个View的内容上显示的内容，可能会覆盖掉View本身的内容。其值和属性bg的值类似。"}),"\n",(0,d.jsxs)(e.h2,{id:"minheight",children:["minHeight",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#minheight",children:"#"})]}),"\n",(0,d.jsx)(e.p,{children:"View的最小高度。该值不总是生效的，取决于其父布局是否有足够的空间容纳。"}),"\n",(0,d.jsxs)(e.p,{children:["例：",(0,d.jsx)(e.code,{children:'<text height="auto" minHeight="50"/>'})]}),"\n",(0,d.jsxs)(e.p,{children:["有关该属性的单位，参见",(0,d.jsx)(e.a,{href:"#ui_%E5%B0%BA%E5%AF%B8%E7%9A%84%E5%8D%95%E4%BD%8D_Dimension",children:"尺寸的单位: Dimension"}),"。"]}),"\n",(0,d.jsxs)(e.h2,{id:"minwidth",children:["minWidth",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#minwidth",children:"#"})]}),"\n",(0,d.jsx)(e.p,{children:"View的最小宽度。该值不总是生效的，取决于其父布局是否有足够的空间容纳。"}),"\n",(0,d.jsxs)(e.p,{children:["例：",(0,d.jsx)(e.code,{children:'<input width="auto" minWidth="50"/>'})]}),"\n",(0,d.jsxs)(e.p,{children:["有关该属性的单位，参见",(0,d.jsx)(e.a,{href:"#ui_%E5%B0%BA%E5%AF%B8%E7%9A%84%E5%8D%95%E4%BD%8D_Dimension",children:"尺寸的单位: Dimension"}),"。"]}),"\n",(0,d.jsxs)(e.h2,{id:"visbility",children:["visbility",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#visbility",children:"#"})]}),"\n",(0,d.jsx)(e.p,{children:"View的可见性，该属性可以决定View是否显示出来。其值可以为："}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.code,{children:"gone"})," 不可见。"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.code,{children:"visible"})," 可见。默认情况下View都是可见的。"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.code,{children:"invisible"})," 不可见，但仍然占用位置。"]}),"\n"]}),"\n",(0,d.jsxs)(e.h2,{id:"rotation",children:["rotation",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#rotation",children:"#"})]}),"\n",(0,d.jsxs)(e.p,{children:["View的旋转角度。通过该属性可以让这个View顺时针旋转一定的角度。例如",(0,d.jsx)(e.code,{children:'rotation="90"'}),"可以让他顺时针旋转90度。"]}),"\n",(0,d.jsxs)(e.p,{children:["如果要设置旋转中心，可以通过",(0,d.jsx)(e.code,{children:"transformPivotX"}),", ",(0,d.jsx)(e.code,{children:"transformPivotY"}),"属性设置。默认的旋转中心为View的中心。"]}),"\n",(0,d.jsxs)(e.h2,{id:"transformpivotx",children:["transformPivotX",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#transformpivotx",children:"#"})]}),"\n",(0,d.jsxs)(e.p,{children:["View的变换中心坐标x。用于View的旋转、放缩等变换的中心坐标。例如",(0,d.jsx)(e.code,{children:'transformPivotX="10"'}),"。"]}),"\n",(0,d.jsx)(e.p,{children:"该坐标的坐标系以View的左上角为原点。也就是x值为变换中心到View的左边的距离。"}),"\n",(0,d.jsxs)(e.p,{children:["有关该属性的单位，参见",(0,d.jsx)(e.a,{href:"#ui_%E5%B0%BA%E5%AF%B8%E7%9A%84%E5%8D%95%E4%BD%8D_Dimension",children:"尺寸的单位: Dimension"}),"。"]}),"\n",(0,d.jsxs)(e.h2,{id:"transformpivoty",children:["transformPivotY",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#transformpivoty",children:"#"})]}),"\n",(0,d.jsxs)(e.p,{children:["View的变换中心坐标y。用于View的旋转、放缩等变换的中心坐标。例如",(0,d.jsx)(e.code,{children:'transformPivotY="10"'}),"。"]}),"\n",(0,d.jsx)(e.p,{children:"该坐标的坐标系以View的左上角为原点。也就是y值为变换中心到View的上边的距离。"}),"\n",(0,d.jsxs)(e.p,{children:["有关该属性的单位，参见",(0,d.jsx)(e.a,{href:"#ui_%E5%B0%BA%E5%AF%B8%E7%9A%84%E5%8D%95%E4%BD%8D_Dimension",children:"尺寸的单位: Dimension"}),"。"]}),"\n",(0,d.jsxs)(e.h2,{id:"style",children:["style",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#style",children:"#"})]}),"\n",(0,d.jsx)(e.p,{children:"设置View的样式。不同控件有不同的可选的内置样式。具体参见各个控件的说明。"}),"\n",(0,d.jsx)(e.p,{children:"需要注意的是，style属性只支持安卓5.1及其以上。"})]})}function j(){let i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,r.ah)(),i.components);return e?(0,d.jsx)(e,{...i,children:(0,d.jsx)(x,{...i})}):x(i)}let p=j;j.__RSPRESS_PAGE_META={},j.__RSPRESS_PAGE_META["v1%2F%E5%9F%BA%E7%A1%80%2Fui%2Fview.md"]={toc:[{text:"w",id:"w",depth:2},{text:"h",id:"h",depth:2},{text:"id",id:"id",depth:2},{text:"gravity",id:"gravity",depth:2},{text:"layout_gravity",id:"layout_gravity",depth:2},{text:"margin",id:"margin",depth:2},{text:"marginLeft",id:"marginleft",depth:2},{text:"marginRight",id:"marginright",depth:2},{text:"marginTop",id:"margintop",depth:2},{text:"marginBottom",id:"marginbottom",depth:2},{text:"padding",id:"padding",depth:2},{text:"paddingLeft",id:"paddingleft",depth:2},{text:"paddingRight",id:"paddingright",depth:2},{text:"paddingTop",id:"paddingtop",depth:2},{text:"paddingBottom",id:"paddingbottom",depth:2},{text:"bg",id:"bg",depth:2},{text:"alpha",id:"alpha",depth:2},{text:"foreground",id:"foreground",depth:2},{text:"minHeight",id:"minheight",depth:2},{text:"minWidth",id:"minwidth",depth:2},{text:"visbility",id:"visbility",depth:2},{text:"rotation",id:"rotation",depth:2},{text:"transformPivotX",id:"transformpivotx",depth:2},{text:"transformPivotY",id:"transformpivoty",depth:2},{text:"style",id:"style",depth:2}],title:"视图: View",headingTitle:"视图: View",frontmatter:{}}}}]);