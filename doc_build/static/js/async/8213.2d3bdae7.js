"use strict";(self.webpackChunkrepress_demo=self.webpackChunkrepress_demo||[]).push([["8213"],{3511:function(e,r,s){s.r(r),s.d(r,{default:()=>i});var a=s(2676),n=s(453);function d(e){let r=Object.assign({h1:"h1",a:"a",div:"div",p:"p",code:"code",h2:"h2",ul:"ul",li:"li",pre:"pre"},(0,n.ah)(),e.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(r.h1,{id:"storages",children:["Storages",(0,a.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#storages",children:"#"})]}),"\n",(0,a.jsxs)(r.div,{className:"rspress-directive tip",children:[(0,a.jsx)(r.div,{className:"rspress-directive-title",children:"稳定性: 稳定"}),(0,a.jsx)(r.div,{className:"rspress-directive-content",children:"\n"})]}),"\n",(0,a.jsx)(r.p,{children:"storages 模块提供了保存简单数据、用户配置等的支持。保存的数据除非应用被卸载或者被主动删除，否则会一直保留。"}),"\n",(0,a.jsxs)(r.p,{children:["storages 支持",(0,a.jsx)(r.code,{children:"number"}),", ",(0,a.jsx)(r.code,{children:"boolean"}),", ",(0,a.jsx)(r.code,{children:"string"}),"等数据类型以及把",(0,a.jsx)(r.code,{children:"Object"}),", ",(0,a.jsx)(r.code,{children:"Array"}),"用",(0,a.jsx)(r.code,{children:"JSON.stringify"}),"序列化存取。"]}),"\n",(0,a.jsx)(r.p,{children:"storages 保存的数据在脚本之间是共享的，任何脚本只要知道 storage 名称便可以获取到相应的数据，因此它不能用于敏感数据的储存。\nstorages 无法像 Web 开发中 LocalStorage 一样提供根据域名独立的存储，因为脚本的路径随时可能改变。"}),"\n",(0,a.jsxs)(r.h2,{id:"storagescreatename",children:["storages.create(name)",(0,a.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#storagescreatename",children:"#"})]}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.code,{children:"name"})," {string} 本地存储名称"]}),"\n"]}),"\n",(0,a.jsxs)(r.p,{children:["创建一个本地存储并返回一个",(0,a.jsx)(r.a,{href:"#storage",children:(0,a.jsx)(r.code,{children:"Storage"})}),"对象。不同名称的本地存储的数据是隔开的，而相同名称的本地存储的数据是共享的。"]}),"\n",(0,a.jsx)(r.p,{children:"例如在一个脚本中，创建名称为 ABC 的存储并存入 a=123:"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-js",children:'var storage = storages.create("ABC");\nstorage.put("a", 123);\n'})}),"\n",(0,a.jsx)(r.p,{children:"而在另一个脚本中是可以获取到 ABC 以及 a 的值的："}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-js",children:'var storage = storages.create("ABC");\nlog("a = " + storage.get("a"));\n'})}),"\n",(0,a.jsx)(r.p,{children:"因此，本地存储的名称比较重要，尽量使用含有域名、作者邮箱等唯一信息的名称来避免冲突，例如："}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-js",children:'var storage = storages.create("2732014414@qq.com:ABC");\n'})}),"\n",(0,a.jsxs)(r.h2,{id:"storagesremovename",children:["storages.remove(name)",(0,a.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#storagesremovename",children:"#"})]}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.code,{children:"name"})," {string} 本地存储名称"]}),"\n"]}),"\n",(0,a.jsx)(r.p,{children:"删除一个本地存储以及他的全部数据。如果该存储不存在，返回 false；否则返回 true。"}),"\n",(0,a.jsxs)(r.h1,{id:"storage",children:["Storage",(0,a.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#storage",children:"#"})]}),"\n",(0,a.jsxs)(r.h2,{id:"storagegetkey-defaultvalue",children:["Storage.get(key[, defaultValue])",(0,a.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#storagegetkey-defaultvalue",children:"#"})]}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.code,{children:"key"})," {string} 键值"]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.code,{children:"defaultValue"})," {any} 可选，默认值"]}),"\n"]}),"\n",(0,a.jsx)(r.p,{children:"从本地存储中取出键值为 key 的数据并返回。"}),"\n",(0,a.jsx)(r.p,{children:"如果该存储中不包含该数据，这时若指定了默认值参数则返回默认值，否则返回 undefined。"}),"\n",(0,a.jsxs)(r.p,{children:["返回的数据可能是任意数据类型，这取决于使用",(0,a.jsx)(r.code,{children:"Storage.put"}),"保存该键值的数据时的数据类型。"]}),"\n",(0,a.jsxs)(r.h2,{id:"storageputkey-value",children:["Storage.put(key, value)",(0,a.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#storageputkey-value",children:"#"})]}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.code,{children:"key"})," {string} 键值"]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.code,{children:"value"})," {any} 值"]}),"\n"]}),"\n",(0,a.jsx)(r.p,{children:"把值 value 保存到本地存储中。value 可以是 undefined 以外的任意数据类型。如果 value 为 undefined 则抛出 TypeError。"}),"\n",(0,a.jsx)(r.p,{children:"存储的过程实际上是使用 JSON.stringify 把 value 转换为字符串再保存，因此 value 必须是可 JSON 化的才能被接受。"}),"\n",(0,a.jsxs)(r.h2,{id:"storageremovekey",children:["Storage.remove(key)",(0,a.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#storageremovekey",children:"#"})]}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.code,{children:"key"})," {string} 键值"]}),"\n"]}),"\n",(0,a.jsx)(r.p,{children:"移除键值为 key 的数据。不返回任何值。"}),"\n",(0,a.jsxs)(r.h2,{id:"storagecontainskey",children:["Storage.contains(key)",(0,a.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#storagecontainskey",children:"#"})]}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.code,{children:"key"})," {string} 键值"]}),"\n"]}),"\n",(0,a.jsx)(r.p,{children:"返回该本地存储是否包含键值为 key 的数据。是则返回 true，否则返回 false。"}),"\n",(0,a.jsxs)(r.h2,{id:"storageclear",children:["Storage.clear()",(0,a.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#storageclear",children:"#"})]}),"\n",(0,a.jsx)(r.p,{children:"移除该本地存储的所有数据。不返回任何值。"})]})}function t(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:r}=Object.assign({},(0,n.ah)(),e.components);return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}let i=t;t.__RSPRESS_PAGE_META={},t.__RSPRESS_PAGE_META["v1%2F%E5%9F%BA%E7%A1%80%2Fstorages.md"]={toc:[{text:"storages.create(name)",id:"storagescreatename",depth:2},{text:"storages.remove(name)",id:"storagesremovename",depth:2},{text:"Storage.get(key[, defaultValue])",id:"storagegetkey-defaultvalue",depth:2},{text:"Storage.put(key, value)",id:"storageputkey-value",depth:2},{text:"Storage.remove(key)",id:"storageremovekey",depth:2},{text:"Storage.contains(key)",id:"storagecontainskey",depth:2},{text:"Storage.clear()",id:"storageclear",depth:2}],title:"Storage",headingTitle:"Storage",frontmatter:{}}}}]);