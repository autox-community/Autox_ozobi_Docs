"use strict";(self.webpackChunkrepress_demo=self.webpackChunkrepress_demo||[]).push([["43"],{3690:function(e,n,s){s.r(n),s.d(n,{default:()=>o});var i=s(2676),r=s(453);function l(e){let n=Object.assign({h1:"h1",a:"a",p:"p",div:"div",strong:"strong",code:"code",pre:"pre",ul:"ul",li:"li",h2:"h2",h3:"h3"},(0,r.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.h1,{id:"axios",children:["axios",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#axios",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"v6.3.9 新增"}),"\n",(0,i.jsxs)(n.div,{className:"rspress-directive danger",children:[(0,i.jsx)(n.div,{className:"rspress-directive-title",children:"稳定性: 实验"}),(0,i.jsx)(n.div,{className:"rspress-directive-content",children:"\n"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"注意"}),": 这个模块是异步的，返回的全部都是",(0,i.jsx)(n.code,{children:"Promise"}),"，如果你的程序有大量阻塞函数，请谨慎使用","\n这个模块不会自动加载，如需使用，请用"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'const axios = require("axios");\n'})}),"\n",(0,i.jsxs)(n.p,{children:["模块使用方法与 axios 完全一致，请参阅",(0,i.jsx)(n.a,{href:"https://www.axios-http.cn/docs/intro",target:"_blank",rel:"noopener noreferrer",children:"官方网站"}),"，以下只介绍一些在 autox 中特有的内容。"]}),"\n",(0,i.jsxs)(n.p,{children:["这个模块通过模拟浏览器关键对象",(0,i.jsx)(n.code,{children:"XMLHttpRequest"}),"得以运行，内部使用 okhttp 进行网络请求，行为与浏览器中有些许差异。"]}),"\n",(0,i.jsx)(n.p,{children:"不支持的内容:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"ArrayBuffer"})," 不支持处理和解析"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"XMLHttpRequest.overrideMimeType()"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"XMLHttpRequest.timeout"})," 暂不支持设置"]}),"\n",(0,i.jsx)(n.li,{children:"上传和下载进度事件"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["支持的",(0,i.jsx)(n.code,{children:"responseType"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"text"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"json"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"blob"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"inputstream"})," java 输入流"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"stream"})," Readable 可读流 *v6.4.0 新增"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"支持的请求体数据类型:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"RequestBody"})," okhttp3.RequestBody 对象"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"FormData"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"Blob"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"InputStream"})," java 输入流"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"String"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"plain object"})," 会解析成 json"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"一个简单的示例"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'const axios = require("axios");\nconst FormData = axios.browser.FormData;\n\n/*\n  下载文件\n*/\naxios("https://m.baidu.com", {\n    responseType: "blob",\n})\n    .then((res) => {\n        const blob = res.data;\n        log("blob:", blob);\n        //保存blob\n        //return axios.utils.saveBlobToFile(blob, savePath)\n    })\n    .then(() => {\n        log("下载成功");\n    })\n    .catch(console.error);\n\n/*\n  使用表单\n*/\nlet form = new FormData();\nform.set("a", "b");\nform.append("b", "123");\nform.append("b", "测试");\naxios\n    .post("http://baidu.com", form)\n    .then(function (res) {\n        log("请求成功1");\n    })\n    .catch(console.error);\n\n/*\n  使用表单上传文件\n*/\nlet blob = axios.utils.openFile("./使用axios.js");\n\nform.enctype = "multipart/form-data";\nform.set("file", blob);\naxios\n    .post("http://baidu.com", form)\n    .then(function (res) {\n        log("请求成功2");\n    })\n    .catch(console.error);\n\n/*\n  也可以使用直接传输\n*/\naxios\n    .post("http://baidu.com", blob)\n    .then(function (res) {\n        log("请求成功3");\n    })\n    .catch(console.error);\n'})}),"\n",(0,i.jsxs)(n.h2,{id:"axiosbrowser",children:["axios.browser",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#axiosbrowser",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["用于模拟浏览器环境的对象，包含",(0,i.jsx)(n.code,{children:"XMLHttpRequest"}),"、",(0,i.jsx)(n.code,{children:"FormData"}),"等，除了",(0,i.jsx)(n.code,{children:"FormData"}),"，其他对象都不建议使用。"]}),"\n",(0,i.jsxs)(n.h2,{id:"axiosutils",children:["axios.utils",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#axiosutils",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"包含一些操作 blob 对象方法"}),"\n",(0,i.jsxs)(n.h3,{id:"utilssaveblobtofileblob-path",children:["utils.saveBlobToFile(blob, path)",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#utilssaveblobtofileblob-path",children:"#"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"blob"})," {Blob} 要保存的对象"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"path"})," {String} 保存路径"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["保存 blob 对象到指定路径，返回一个",(0,i.jsx)(n.code,{children:"Promise"}),"。"]}),"\n",(0,i.jsxs)(n.h3,{id:"utilsopenfilepath",children:["utils.openFile(path)",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#utilsopenfilepath",children:"#"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"path"})," {String} 要打开的文件路径"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"打开一个文件，返回一个 blob 对象"}),"\n",(0,i.jsxs)(n.h3,{id:"utilscopyinputstreaminputstream-outputstream",children:["utils.copyInputStream(inputstream, outputstream)",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#utilscopyinputstreaminputstream-outputstream",children:"#"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"inputstream"}),"java 输入流"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"outputstream"})," java 输出流"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"拷贝输入流到输出流，这个函数是阻塞的，且不会自动关闭流。"}),"\n",(0,i.jsxs)(n.h3,{id:"utilsthreadpool",children:["utils.ThreadPool",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#utilsthreadpool",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["此对象用于将一个同步函数转成异步方法运行，返回一个",(0,i.jsx)(n.code,{children:"Promise"}),"，例如"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"let promise = ThreadPool.run(()>{\n  //同步代码，返回值就是Promise的返回值\n})\n"})})]})}function t(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}let o=t;t.__RSPRESS_PAGE_META={},t.__RSPRESS_PAGE_META["v1%2F%E9%AB%98%E7%BA%A7%2Faxios.md"]={toc:[{text:"axios.browser",id:"axiosbrowser",depth:2},{text:"axios.utils",id:"axiosutils",depth:2},{text:"utils.saveBlobToFile(blob, path)",id:"utilssaveblobtofileblob-path",depth:3},{text:"utils.openFile(path)",id:"utilsopenfilepath",depth:3},{text:"utils.copyInputStream(inputstream, outputstream)",id:"utilscopyinputstreaminputstream-outputstream",depth:3},{text:"utils.ThreadPool",id:"utilsthreadpool",depth:3}],title:"axios",headingTitle:"axios",frontmatter:{}}}}]);