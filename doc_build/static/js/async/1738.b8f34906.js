"use strict";(self.webpackChunkrepress_demo=self.webpackChunkrepress_demo||[]).push([["1738"],{4688:function(e,n,i){i.r(n),i.d(n,{default:()=>d});var s=i(2676),r=i(453);function c(e){let n=Object.assign({h1:"h1",a:"a",div:"div",p:"p",pre:"pre",code:"code",h2:"h2",ul:"ul",li:"li",strong:"strong"},(0,r.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"engines",children:["Engines",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#engines",children:"#"})]}),"\n",(0,s.jsxs)(n.div,{className:"rspress-directive tip",children:[(0,s.jsx)(n.div,{className:"rspress-directive-title",children:"稳定性: 稳定"}),(0,s.jsx)(n.div,{className:"rspress-directive-content",children:"\n"})]}),"\n",(0,s.jsx)(n.p,{children:"engines 模块包含了一些与脚本环境、脚本运行、脚本引擎有关的函数，包括运行其他脚本，关闭脚本等。"}),"\n",(0,s.jsx)(n.p,{children:"例如，获取脚本所在目录："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"toast(engines.myEngine().cwd());\n"})}),"\n",(0,s.jsxs)(n.h1,{id:"engines-1",children:["Engines",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#engines-1",children:"#"})]}),"\n",(0,s.jsxs)(n.h2,{id:"enginesexecscriptname-script-config",children:["engines.execScript(name, script[, config])",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#enginesexecscriptname-script-config",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"name"})," {string} 要运行的脚本名称。这个名称和文件名称无关，只是在任务管理中显示的名称。"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"script"})," {string} 要运行的脚本内容。"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"config"})," {Object} 运行配置项","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"delay"})," {number} 延迟执行的毫秒数，默认为 0"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"loopTimes"})," {number} 循环运行次数，默认为 1。0 为无限循环。"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"interval"})," {number} 循环运行时两次运行之间的时间间隔，默认为 0"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"path"})," {Array} | {string} 指定脚本运行的目录。这些路径会用于 require 时寻找模块文件。"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["在新的脚本环境中运行脚本 script。返回一个",(0,s.jsx)(n.a,{href:"#ScriptExecution",children:"ScriptExectuion"}),"对象。"]}),"\n",(0,s.jsx)(n.p,{children:"所谓新的脚本环境，指定是，脚本中的变量和原脚本的变量是不共享的，并且，脚本会在新的线程中运行。"}),"\n",(0,s.jsx)(n.p,{children:"最简单的例子如下："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'engines.execScript("hello world", "toast(\'hello world\')");\n'})}),"\n",(0,s.jsx)(n.p,{children:"如果要循环运行，则："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'//每隔 3 秒运行一次脚本，循环 10 次\nengines.execScript("hello world", "toast(\'hello world\')", {\n    loopTimes: 10,\n    interval: 3000,\n});\n'})}),"\n",(0,s.jsxs)(n.p,{children:["用字符串来编写脚本非常不方便，可以结合 ",(0,s.jsx)(n.code,{children:"Function.toString()"}),"的方法来执行特定函数:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'function helloWorld() {\n    //注意，这里的变量和脚本主体的变量并不共享\n    toast("hello world");\n}\nengines.execScript("hello world", "helloWorld();\\n" + helloWorld.toString());\n'})}),"\n",(0,s.jsx)(n.p,{children:"如果要传递变量，则可以把这些封装成一个函数："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'function exec(action, args) {\n    args = args || {};\n    engines.execScript(action.name, action + "(" + JSON.stringify(args) + ");\\n" + action.toString());\n}\n\n//要执行的函数，是一个简单的加法\nfunction add(args) {\n    toast(args.a + args.b);\n}\n\n//在新的脚本环境中执行 1 + 2\nexec(add, { a: 1, b: 2 });\n'})}),"\n",(0,s.jsxs)(n.h2,{id:"enginesexecscriptfilepath-config",children:["engines.execScriptFile(path[, config])",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#enginesexecscriptfilepath-config",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"path"})," {string} 要运行的脚本路径。"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"config"})," {Object} 运行配置项","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"delay"})," {number} 延迟执行的毫秒数，默认为 0"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"loopTimes"})," {number} 循环运行次数，默认为 1。0 为无限循环。"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"interval"})," {number} 循环运行时两次运行之间的时间间隔，默认为 0"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"path"})," {Array} | {string} 指定脚本运行的目录。这些路径会用于 require 时寻找模块文件。"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["在新的脚本环境中运行脚本文件 path。返回一个",(0,s.jsx)(n.a,{href:"#ScriptExecution",children:"ScriptExecution"}),"对象。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'engines.execScriptFile("/sdcard/脚本/1.js");\n'})}),"\n",(0,s.jsxs)(n.h2,{id:"enginesexecautofilepath-config",children:["engines.execAutoFile(path[, config])",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#enginesexecautofilepath-config",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"path"})," {string} 要运行的录制文件路径。"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"config"})," {Object} 运行配置项","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"delay"})," {number} 延迟执行的毫秒数，默认为 0"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"loopTimes"})," {number} 循环运行次数，默认为 1。0 为无限循环。"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"interval"})," {number} 循环运行时两次运行之间的时间间隔，默认为 0"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"path"})," {Array} | {string} 指定脚本运行的目录。这些路径会用于 require 时寻找模块文件。"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["在新的脚本环境中运行录制文件 path。返回一个",(0,s.jsx)(n.a,{href:"#ScriptExecution",children:"ScriptExecution"}),"对象。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'engines.execAutoFile("/sdcard/脚本/1.auto");\n'})}),"\n",(0,s.jsxs)(n.h2,{id:"enginesstopall",children:["engines.stopAll()",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#enginesstopall",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"停止所有正在运行的脚本。包括当前脚本自身。"}),"\n",(0,s.jsxs)(n.h2,{id:"enginesstopallandtoast",children:["engines.stopAllAndToast()",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#enginesstopallandtoast",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"停止所有正在运行的脚本并显示停止的脚本数量。包括当前脚本自身。"}),"\n",(0,s.jsxs)(n.h2,{id:"enginesmyengine",children:["engines.myEngine()",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#enginesmyengine",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["返回当前脚本的脚本引擎对象(",(0,s.jsx)(n.a,{href:"#ScriptEngine",children:"ScriptEngine"}),")"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"[v4.1.0 新增]"}),"\n特别的，该对象可以通过",(0,s.jsx)(n.code,{children:"execArgv"}),"来获取他的运行参数，包括外部参数、intent 等。例如："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"log(engines.myEngine().execArgv);\n"})}),"\n",(0,s.jsx)(n.p,{children:"普通脚本的运行参数通常为空，通过定时任务的广播启动的则可以获取到启动的 intent。"}),"\n",(0,s.jsxs)(n.h2,{id:"enginesall",children:["engines.all()",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#enginesall",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"返回 {Array}"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["返回当前所有正在运行的脚本的脚本引擎",(0,s.jsx)(n.a,{href:"#ScriptEngine",children:"ScriptEngine"}),"的数组。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"log(engines.all());\n"})})]})}function l(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}let d=l;l.__RSPRESS_PAGE_META={},l.__RSPRESS_PAGE_META["v1%2F%E9%AB%98%E7%BA%A7%2Fengines%2Fengines.md"]={toc:[{text:"engines.execScript(name, script[, config])",id:"enginesexecscriptname-script-config",depth:2},{text:"engines.execScriptFile(path[, config])",id:"enginesexecscriptfilepath-config",depth:2},{text:"engines.execAutoFile(path[, config])",id:"enginesexecautofilepath-config",depth:2},{text:"engines.stopAll()",id:"enginesstopall",depth:2},{text:"engines.stopAllAndToast()",id:"enginesstopallandtoast",depth:2},{text:"engines.myEngine()",id:"enginesmyengine",depth:2},{text:"engines.all()",id:"enginesall",depth:2}],title:"Engines",headingTitle:"Engines",frontmatter:{}}}}]);