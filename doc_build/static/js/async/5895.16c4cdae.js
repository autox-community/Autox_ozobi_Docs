"use strict";(self.webpackChunkrepress_demo=self.webpackChunkrepress_demo||[]).push([["5895"],{6527:function(r,e,l){l.r(e),l.d(e,{default:()=>d});var o=l(2676),s=l(453);function c(r){let e=Object.assign({h1:"h1",a:"a",p:"p",code:"code",h2:"h2",ul:"ul",li:"li",em:"em",pre:"pre"},(0,s.ah)(),r.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(e.h1,{id:"colors",children:["colors",(0,o.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#colors",children:"#"})]}),"\n",(0,o.jsx)(e.p,{children:":::"}),"\n",(0,o.jsx)(e.p,{children:":::tip 稳定性: 稳定"}),"\n",(0,o.jsx)(e.p,{children:":::\r\n在 Auto.js 有两种方式表示一个颜色。"}),"\n",(0,o.jsx)(e.p,{children:'一种是使用一个字符串"#AARRGGBB"或"#RRGGBB"，其中 AA 是 Alpha 通道(透明度)的值，RR 是 R 通道(红色)的值，GG 是 G 通道(绿色)的值，BB 是 B 通道(蓝色)的值。例如"#ffffff"表示白色, "#7F000000"表示半透明的黑色。'}),"\n",(0,o.jsxs)(e.p,{children:['另一种是使用一个 16 进制的"32 位整数" 0xAARRGGBB 来表示一个颜色，例如 ',(0,o.jsx)(e.code,{children:"0xFF112233"}),'表示颜色"#112233", ',(0,o.jsx)(e.code,{children:"0x11223344"}),'表示颜色"#11223344"。']}),"\n",(0,o.jsxs)(e.p,{children:["可以通过",(0,o.jsx)(e.code,{children:"colors.toString()"}),"把颜色整数转换为字符串，通过",(0,o.jsx)(e.code,{children:"colors.parseColor()"}),"把颜色字符串解析为颜色整数。"]}),"\n",(0,o.jsxs)(e.h1,{id:"colors-1",children:["colors",(0,o.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#colors-1",children:"#"})]}),"\n",(0,o.jsxs)(e.h2,{id:"colorstostringcolor",children:["colors.toString(color)",(0,o.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#colorstostringcolor",children:"#"})]}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.code,{children:"color"})," {number} 整数 RGB 颜色值"]}),"\n",(0,o.jsx)(e.li,{children:"返回 {string}"}),"\n"]}),"\n",(0,o.jsx)(e.p,{children:'返回颜色值的字符串，格式为 "#AARRGGBB"。'}),"\n",(0,o.jsxs)(e.h2,{id:"colorsredcolor",children:["colors.red(color)",(0,o.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#colorsredcolor",children:"#"})]}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.code,{children:"color"})," {number} | {string} 颜色值"]}),"\n",(0,o.jsx)(e.li,{children:"返回 {number}"}),"\n"]}),"\n",(0,o.jsx)(e.p,{children:"返回颜色 color 的 R 通道的值，范围 0~255."}),"\n",(0,o.jsxs)(e.h2,{id:"colorsgreencolor",children:["colors.green(color)",(0,o.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#colorsgreencolor",children:"#"})]}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.code,{children:"color"})," {number} | {string} 颜色值"]}),"\n",(0,o.jsx)(e.li,{children:"返回 {number}"}),"\n"]}),"\n",(0,o.jsx)(e.p,{children:"返回颜色 color 的 G 通道的值，范围 0~255."}),"\n",(0,o.jsxs)(e.h2,{id:"colorsbluecolor",children:["colors.blue(color)",(0,o.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#colorsbluecolor",children:"#"})]}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.code,{children:"color"})," {number} | {string} 颜色值"]}),"\n",(0,o.jsx)(e.li,{children:"返回 {number}"}),"\n"]}),"\n",(0,o.jsx)(e.p,{children:"返回颜色 color 的 B 通道的值，范围 0~255."}),"\n",(0,o.jsxs)(e.h2,{id:"colorsalphacolor",children:["colors.alpha(color)",(0,o.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#colorsalphacolor",children:"#"})]}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.code,{children:"color"})," {number} | {string} 颜色值"]}),"\n",(0,o.jsx)(e.li,{children:"返回 {number}"}),"\n"]}),"\n",(0,o.jsx)(e.p,{children:"返回颜色 color 的 Alpha 通道的值，范围 0~255."}),"\n",(0,o.jsxs)(e.h2,{id:"colorsrgbred-green-blue",children:["colors.rgb(red, green, blue)",(0,o.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#colorsrgbred-green-blue",children:"#"})]}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:"red {number} 颜色的 R 通道的值"}),"\n",(0,o.jsx)(e.li,{children:"blue {number} 颜色的 G 通道的值"}),"\n",(0,o.jsx)(e.li,{children:"green {number} 颜色的 B 通道的值"}),"\n",(0,o.jsx)(e.li,{children:"返回 {number}"}),"\n"]}),"\n",(0,o.jsx)(e.p,{children:"返回这些颜色通道构成的整数颜色值。Alpha 通道将是 255（不透明）。"}),"\n",(0,o.jsxs)(e.h2,{id:"colorsargbalpha-red-green-blue",children:["colors.argb(alpha, red, green, blue)",(0,o.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#colorsargbalpha-red-green-blue",children:"#"})]}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.code,{children:"alpha"})," {number} 颜色的 Alpha 通道的值"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.code,{children:"red"})," {number} 颜色的 R 通道的值"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.code,{children:"green"})," {number} 颜色的 G 通道的值"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.code,{children:"blue"})," {number} 颜色的 B 通道的值"]}),"\n",(0,o.jsx)(e.li,{children:"返回 {number}"}),"\n"]}),"\n",(0,o.jsx)(e.p,{children:"返回这些颜色通道构成的整数颜色值。"}),"\n",(0,o.jsxs)(e.h2,{id:"colorsparsecolorcolorstr",children:["colors.parseColor(colorStr)",(0,o.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#colorsparsecolorcolorstr",children:"#"})]}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.code,{children:"colorStr"}),' {string} 表示颜色的字符串，例如"#112233"']}),"\n",(0,o.jsx)(e.li,{children:"返回 {number}"}),"\n"]}),"\n",(0,o.jsx)(e.p,{children:"返回颜色的整数值。"}),"\n",(0,o.jsxs)(e.h2,{id:"colorsissimilarcolor2-color2-threshold-algorithm",children:["colors.isSimilar(color2, color2[, threshold, algorithm])",(0,o.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#colorsissimilarcolor2-color2-threshold-algorithm",children:"#"})]}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.code,{children:"color1"})," {number} | {string} 颜色值 1"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.code,{children:"color1"})," {number} | {string} 颜色值 2"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.code,{children:"threshold"})," {number} 颜色相似度临界值，默认为 4。取值范围为 0~255。这个值越大表示允许的相似程度越小，如果这个值为 0，则两个颜色相等时该函数才会返回 true。"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.code,{children:"algorithm"}),' {string} 颜色匹配算法，默认为"diff", 包括:',"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:'"diff": 差值匹配。与给定颜色的 R、G、B 差的绝对值之和小于 threshold 时匹配。'}),"\n",(0,o.jsx)(e.li,{children:'"rgb": rgb 欧拉距离相似度。与给定颜色 color 的 rgb 欧拉距离小于等于 threshold 时匹配。'}),"\n",(0,o.jsxs)(e.li,{children:['"rgb+": 加权 rgb 欧拉距离匹配(',(0,o.jsx)(e.a,{href:"https://en.wikipedia.org/wiki/Color_difference",target:"_blank",rel:"noopener noreferrer",children:"LAB Delta E"}),")。"]}),"\n",(0,o.jsx)(e.li,{children:'"hs": hs 欧拉距离匹配。hs 为 HSV 空间的色调值。'}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(e.li,{children:"返回 {Boolean}"}),"\n"]}),"\n",(0,o.jsx)(e.p,{children:"返回两个颜色是否相似。"}),"\n",(0,o.jsxs)(e.h2,{id:"colorsequalscolor1-color2",children:["colors.equals(color1, color2)",(0,o.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#colorsequalscolor1-color2",children:"#"})]}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.code,{children:"color1"})," {number} | {string} 颜色值 1"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.code,{children:"color1"})," {number} | {string} 颜色值 2"]}),"\n",(0,o.jsx)(e.li,{children:"返回 {Boolean}"}),"\n"]}),"\n",(0,o.jsxs)(e.p,{children:["返回两个颜色是否相等。*",(0,o.jsx)(e.em,{children:"注意该函数会忽略 Alpha 通道的值进行比较"}),"。"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-js",children:'log(colors.equals("#112233", "#112234"));\r\nlog(colors.equals(0xff112233, 0xff223344));\n'})}),"\n",(0,o.jsxs)(e.h2,{id:"colorsblack",children:["colors.BLACK",(0,o.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#colorsblack",children:"#"})]}),"\n",(0,o.jsx)(e.p,{children:"黑色，颜色值 #FF000000"}),"\n",(0,o.jsxs)(e.h2,{id:"colorsdkgray",children:["colors.DKGRAY",(0,o.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#colorsdkgray",children:"#"})]}),"\n",(0,o.jsx)(e.p,{children:"深灰色，颜色值 #FF444444"}),"\n",(0,o.jsxs)(e.h2,{id:"colorsgray",children:["colors.GRAY",(0,o.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#colorsgray",children:"#"})]}),"\n",(0,o.jsx)(e.p,{children:"灰色，颜色值 #FF888888"}),"\n",(0,o.jsxs)(e.h2,{id:"colorsltgray",children:["colors.LTGRAY",(0,o.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#colorsltgray",children:"#"})]}),"\n",(0,o.jsx)(e.p,{children:"亮灰色，颜色值 #FFCCCCCC"}),"\n",(0,o.jsxs)(e.h2,{id:"colorswhite",children:["colors.WHITE",(0,o.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#colorswhite",children:"#"})]}),"\n",(0,o.jsx)(e.p,{children:"白色，颜色值 #FFFFFFFF"}),"\n",(0,o.jsxs)(e.h2,{id:"colorsred",children:["colors.RED",(0,o.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#colorsred",children:"#"})]}),"\n",(0,o.jsx)(e.p,{children:"红色，颜色值 #FFFF0000"}),"\n",(0,o.jsxs)(e.h2,{id:"colorsgreen",children:["colors.GREEN",(0,o.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#colorsgreen",children:"#"})]}),"\n",(0,o.jsx)(e.p,{children:"绿色，颜色值 #FF00FF00"}),"\n",(0,o.jsxs)(e.h2,{id:"colorsblue",children:["colors.BLUE",(0,o.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#colorsblue",children:"#"})]}),"\n",(0,o.jsx)(e.p,{children:"蓝色，颜色值 #FF0000FF"}),"\n",(0,o.jsxs)(e.h2,{id:"colorsyellow",children:["colors.YELLOW",(0,o.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#colorsyellow",children:"#"})]}),"\n",(0,o.jsx)(e.p,{children:"黄色，颜色值 #FFFFFF00"}),"\n",(0,o.jsxs)(e.h2,{id:"colorscyan",children:["colors.CYAN",(0,o.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#colorscyan",children:"#"})]}),"\n",(0,o.jsx)(e.p,{children:"青色，颜色值 #FF00FFFF"}),"\n",(0,o.jsxs)(e.h2,{id:"colorsmagenta",children:["colors.MAGENTA",(0,o.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#colorsmagenta",children:"#"})]}),"\n",(0,o.jsx)(e.p,{children:"品红色，颜色值 #FFFF00FF"}),"\n",(0,o.jsxs)(e.h2,{id:"colorstransparent",children:["colors.TRANSPARENT",(0,o.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#colorstransparent",children:"#"})]}),"\n",(0,o.jsx)(e.p,{children:"透明，颜色值 #00000000"})]})}function n(){let r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,s.ah)(),r.components);return e?(0,o.jsx)(e,{...r,children:(0,o.jsx)(c,{...r})}):c(r)}let d=n;n.__RSPRESS_PAGE_META={},n.__RSPRESS_PAGE_META["v1%2F%E9%AB%98%E7%BA%A7%2Fimages%2Fcolors.md"]={toc:[{text:"colors.toString(color)",id:"colorstostringcolor",depth:2},{text:"colors.red(color)",id:"colorsredcolor",depth:2},{text:"colors.green(color)",id:"colorsgreencolor",depth:2},{text:"colors.blue(color)",id:"colorsbluecolor",depth:2},{text:"colors.alpha(color)",id:"colorsalphacolor",depth:2},{text:"colors.rgb(red, green, blue)",id:"colorsrgbred-green-blue",depth:2},{text:"colors.argb(alpha, red, green, blue)",id:"colorsargbalpha-red-green-blue",depth:2},{text:"colors.parseColor(colorStr)",id:"colorsparsecolorcolorstr",depth:2},{text:"colors.isSimilar(color2, color2[, threshold, algorithm])",id:"colorsissimilarcolor2-color2-threshold-algorithm",depth:2},{text:"colors.equals(color1, color2)",id:"colorsequalscolor1-color2",depth:2},{text:"colors.BLACK",id:"colorsblack",depth:2},{text:"colors.DKGRAY",id:"colorsdkgray",depth:2},{text:"colors.GRAY",id:"colorsgray",depth:2},{text:"colors.LTGRAY",id:"colorsltgray",depth:2},{text:"colors.WHITE",id:"colorswhite",depth:2},{text:"colors.RED",id:"colorsred",depth:2},{text:"colors.GREEN",id:"colorsgreen",depth:2},{text:"colors.BLUE",id:"colorsblue",depth:2},{text:"colors.YELLOW",id:"colorsyellow",depth:2},{text:"colors.CYAN",id:"colorscyan",depth:2},{text:"colors.MAGENTA",id:"colorsmagenta",depth:2},{text:"colors.TRANSPARENT",id:"colorstransparent",depth:2}],title:"colors",headingTitle:"colors",frontmatter:{}}}}]);