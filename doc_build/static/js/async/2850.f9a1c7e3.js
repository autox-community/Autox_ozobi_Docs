"use strict";(self.webpackChunkrepress_demo=self.webpackChunkrepress_demo||[]).push([["2850"],{9118:function(e,s,n){n.r(s),n.d(s,{default:()=>i});var r=n(2676),t=n(453);function l(e){let s=Object.assign({h1:"h1",a:"a",div:"div",p:"p",h2:"h2",ul:"ul",li:"li",code:"code",pre:"pre",ol:"ol"},(0,t.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(s.h1,{id:"http",children:["HTTP",(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#http",children:"#"})]}),"\n",(0,r.jsxs)(s.div,{className:"rspress-directive tip",children:[(0,r.jsx)(s.div,{className:"rspress-directive-title",children:"稳定性: 稳定"}),(0,r.jsx)(s.div,{className:"rspress-directive-content",children:"\n"})]}),"\n",(0,r.jsx)(s.p,{children:"http 模块提供一些进行 http 请求的函数。"}),"\n",(0,r.jsxs)(s.h2,{id:"httpgeturl-options-callback",children:["http.get(url[, options, callback])",(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#httpgeturl-options-callback",children:"#"})]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"url"}),' {string} 请求的 URL 地址，需要以"http://"或"https://"开头。如果 url 没有以"http://"开头，则默认为"http://"。']}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"options"})," {Object} 请求选项。参见[http.request()][]。"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"callback"})," {Function} 回调函数，可选，其参数是一个[Response][]对象。如果不加回调函数，则该请求将阻塞、同步地执行。"]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"对地址 url 进行一次 HTTP GET 请求。如果没有回调函数，则在请求完成或失败时返回此次请求的响应(参见[Response][])。"}),"\n",(0,r.jsx)(s.p,{children:"最简单 GET 请求如下:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",children:'console.show();\nvar r = http.get("www.baidu.com");\nlog("code = " + r.statusCode);\nlog("html = " + r.body.string());\n'})}),"\n",(0,r.jsx)(s.p,{children:"采用回调形式的 GET 请求如下："}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",children:'console.show();\nhttp.get("www.baidu.com", {}, function (res, err) {\n    if (err) {\n        console.error(err);\n        return;\n    }\n    log("code = " + res.statusCode);\n    log("html = " + res.body.string());\n});\n'})}),"\n",(0,r.jsx)(s.p,{children:"如果要增加 HTTP 头部信息，则在 options 参数中添加，例如："}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",children:'console.show();\nvar r = http.get("www.baidu.com", {\n    headers: {\n        "Accept-Language": "zh-cn,zh;q=0.5",\n        "User-Agent": "Mozilla/5.0(Macintosh;IntelMacOSX10_7_0)AppleWebKit/535.11(KHTML,likeGecko)Chrome/17.0.963.56Safari/535.11",\n    },\n});\nlog("code = " + r.statusCode);\nlog("html = " + r.body.string());\n'})}),"\n",(0,r.jsx)(s.p,{children:"一个请求天气并解析返回的天气 JSON 结果的例子如下："}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",children:'var city = "广州";\nvar res = http.get("http://www.sojson.com/open/api/weather/json.shtml?city=" + city);\nif (res.statusCode != 200) {\n    toast("请求失败: " + res.statusCode + " " + res.statusMessage);\n} else {\n    var weather = res.body.json();\n    log(weather);\n    toast(util.format("温度: %s 湿度: %s 空气质量: %s", weather.data.wendu, weather.data.shidu, weather.quality));\n}\n'})}),"\n",(0,r.jsxs)(s.h2,{id:"httpposturl-data-options-callback",children:["http.post(url, data[, options, callback])",(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#httpposturl-data-options-callback",children:"#"})]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"url"}),' {string} 请求的 URL 地址，需要以"http://"或"https://"开头。如果 url 没有以"http://"开头，则默认为"http://"。']}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"data"})," {string} | {Object} POST 数据。"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"options"})," {Object} 请求选项。"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"callback"})," {Function} 回调，其参数是一个[Response][]对象。如果不加回调参数，则该请求将阻塞、同步地执行。"]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"对地址 url 进行一次 HTTP POST 请求。如果没有回调函数，则在请求完成或失败时返回此次请求的响应(参见[Response][])。"}),"\n",(0,r.jsx)(s.p,{children:'其中 POST 数据可以是字符串或键值对。具体含义取决于 options.contentType 的值。默认为"application/x-www-form-urlencoded"(表单提交), 这种方式是 JQuery 的 ajax 函数的默认方式。'}),"\n",(0,r.jsx)(s.p,{children:"一个模拟表单提交登录淘宝的例子如下:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",children:'var url = "https://login.taobao.com/member/login.jhtml";\nvar username = "你的用户名";\nvar password = "你的密码";\nvar res = http.post(url, {\n    "TPL_username": username,\n    "TPL_password": password,\n});\nvar html = res.body.string();\nif (html.contains("页面跳转中")) {\n    toast("登录成功");\n} else {\n    toast("登录失败");\n}\n'})}),"\n",(0,r.jsxs)(s.h2,{id:"httppostjsonurl-data-options-callback",children:["http.postJson(url[, data, options, callback])",(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#httppostjsonurl-data-options-callback",children:"#"})]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"url"}),' {string} 请求的 URL 地址，需要以"http://"或"https://"开头。如果 url 没有以"http://"开头，则默认为"http://"。']}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"data"})," {Object} POST 数据。"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"options"})," {Object} 请求选项。"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"callback"})," {Function} 回调，其参数是一个[Response][]对象。如果不加回调参数，则该请求将阻塞、同步地执行。"]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"以 JSON 格式向目标 Url 发起 POST 请求。如果没有回调函数，则在请求完成或失败时返回此次请求的响应(参见[Response][])。"}),"\n",(0,r.jsxs)(s.p,{children:["JSON 格式指的是，将会调用",(0,r.jsx)(s.code,{children:"JSON.stringify()"}),'把 data 对象转换为 JSON 字符串，并在 HTTP 头部信息中把"Content-Type"属性置为"application/json"。这种方式是 AngularJS 的 ajax 函数的默认方式。']}),"\n",(0,r.jsx)(s.p,{children:"一个调用图灵机器人接口的例子如下："}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",children:'var url = "http://www.tuling123.com/openapi/api";\nr = http.postJson(url, {\n    key: "65458a5df537443b89b31f1c03202a80",\n    info: "你好啊",\n    userid: "1",\n});\ntoastLog(r.body.string());\n'})}),"\n",(0,r.jsxs)(s.h2,{id:"httppostmultiparturl-files-options-callback",children:["http.postMultipart(url, files[, options, callback])",(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#httppostmultiparturl-files-options-callback",children:"#"})]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"url"}),' {string} 请求的 URL 地址，需要以"http://"或"https://"开头。如果 url 没有以"http://"开头，则默认为"http://"。']}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"files"})," {Object} POST 数据。"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"options"})," {Object} 请求选项。"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"callback"})," {Function} 回调，其参数是一个",(0,r.jsx)(s.code,{children:"Response"}),"对象。如果不加回调参数，则该请求将阻塞、同步地执行。"]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"向目标地址发起类型为 multipart/form-data 的请求（通常用于文件上传等), 其中 files 参数是{name1: value1, name2: value2, ...}的键值对，value 的格式可以是以下几种情况："}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"string"})}),"\n",(0,r.jsx)(s.li,{children:"文件类型，即 open()返回的类型"}),"\n",(0,r.jsx)(s.li,{children:"[fileName, filePath]"}),"\n",(0,r.jsx)(s.li,{children:"[fileName, mimeType, filePath]"}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"其中 1 属于非文件参数，2、3、4 为文件参数。举个例子，最简单的文件上传的请求为："}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",children:'var res = http.postMultipart(url, {\n    file: open("/sdcard/1.txt"),\n});\nlog(res.body.string());\n'})}),"\n",(0,r.jsx)(s.p,{children:"如果使用格式 2，则代码为"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",children:'var res = http.postMultipart(url, {\n    file: ["1.txt", "/sdcard/1.txt"],\n});\nlog(res.body.string());\n'})}),"\n",(0,r.jsx)(s.p,{children:"如果使用格式 3，则代码为"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",children:'var res = http.postMultipart(url, {\n    file: ["1.txt", "text/plain", "/sdcard/1.txt"],\n});\nlog(res.body.string());\n'})}),"\n",(0,r.jsx)(s.p,{children:'如果使用格式 2 的同时要附带非文件参数"appId=abcdefghijk"，则为:'}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",children:'var res = http.postMultipart(url, {\n    appId: "adcdefghijk",\n    file: open("/sdcard/1.txt"),\n});\nlog(res.body.string());\n'})}),"\n",(0,r.jsxs)(s.h2,{id:"httprequesturl-options-callback",children:["http.request(url[, options, callback])",(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#httprequesturl-options-callback",children:"#"})]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"url"}),' {string} 请求的 URL 地址，需要以"http://"或"https://"开头。如果 url 没有以"http://"开头，则默认为"http://"。']}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"options"})," {Object} 请求选项。参见[http.buildRequest()][]。"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"callback"})," {Function} 回调，其参数是一个[Response][]对象。如果不加回调参数，则该请求将阻塞、同步地执行。"]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"对目标地址 url 发起一次 HTTP 请求。如果没有回调函数，则在请求完成或失败时返回此次请求的响应(参见[Response][])。"}),"\n",(0,r.jsx)(s.p,{children:"选项 options 可以包含以下属性："}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"headers"})," {Object} 键值对形式的 HTTP 头部信息。有关 HTTP 头部信息，参见",(0,r.jsx)(s.a,{href:"http://www.runoob.com/http/http-header-fields.html",target:"_blank",rel:"noopener noreferrer",children:"菜鸟教程：HTTP 响应头信息"}),"。"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"method"}),' {string} HTTP 请求方法。包括"GET", "POST", "PUT", "DELET", "PATCH"。']}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"contentType"}),' {string} HTTP 头部信息中的"Content-Type", 表示 HTTP 请求的内容类型。例如"text/plain", "application/json"。更多信息参见',(0,r.jsx)(s.a,{href:"http://www.runoob.com/http/http-content-type.html",target:"_blank",rel:"noopener noreferrer",children:"菜鸟教程：HTTP contentType"}),"。"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"body"})," {string} | {Array} | {Function} HTTP 请求的内容。可以是一个字符串，也可以是一个字节数组；或者是一个以",(0,r.jsx)(s.a,{href:"https://github.com/square/okio/blob/master/okio/src/main/java/okio/BufferedSink.java",target:"_blank",rel:"noopener noreferrer",children:"BufferedSink"}),"为参数的函数。"]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"该函数是 get, post, postJson 等函数的基础函数。因此除非是 PUT, DELET 等请求，或者需要更高定制的 HTTP 请求，否则直接使用 get, post, postJson 等函数会更加方便。"}),"\n",(0,r.jsxs)(s.h1,{id:"response",children:["Response",(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#response",children:"#"})]}),"\n",(0,r.jsx)(s.p,{children:"HTTP 请求的响应。"}),"\n",(0,r.jsxs)(s.h2,{id:"responsestatuscode",children:["Response.statusCode",(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#responsestatuscode",children:"#"})]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"{number}"}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"当前响应的 HTTP 状态码。例如 200(OK), 404(Not Found)等。"}),"\n",(0,r.jsxs)(s.p,{children:["有关 HTTP 状态码的信息，参见",(0,r.jsx)(s.a,{href:"http://www.runoob.com/http/http-status-codes.html",target:"_blank",rel:"noopener noreferrer",children:"菜鸟教程：HTTP 状态码"}),"。"]}),"\n",(0,r.jsxs)(s.h2,{id:"responsestatusmessage",children:["Response.statusMessage",(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#responsestatusmessage",children:"#"})]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"{string}"}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:'当前响应的 HTTP 状态信息。例如"OK", "Bad Request", "Forbidden"。'}),"\n",(0,r.jsxs)(s.p,{children:["有关 HTTP 状态码的信息，参见",(0,r.jsx)(s.a,{href:"http://www.runoob.com/http/http-status-codes.html",target:"_blank",rel:"noopener noreferrer",children:"菜鸟教程：HTTP 状态码"}),"。"]}),"\n",(0,r.jsx)(s.p,{children:"例子："}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",children:'var res = http.get("www.baidu.com");\nif (res.statusCode >= 200 && res.statusCode < 300) {\n    toast("页面获取成功!");\n} else if (res.statusCode == 404) {\n    toast("页面没找到哦...");\n} else {\n    toast("错误: " + res.statusCode + " " + res.statusMessage);\n}\n'})}),"\n",(0,r.jsxs)(s.h2,{id:"responseheaders",children:["Response.headers",(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#responseheaders",children:"#"})]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"{Object}"}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"当前响应的 HTTP 头部信息。该对象的键是响应头名称，值是各自的响应头值。 所有响应头名称都是小写的(吗)。"}),"\n",(0,r.jsxs)(s.p,{children:["有关 HTTP 头部信息，参见",(0,r.jsx)(s.a,{href:"http://www.runoob.com/http/http-header-fields.html",target:"_blank",rel:"noopener noreferrer",children:"菜鸟教程：HTTP 响应头信息"}),"。"]}),"\n",(0,r.jsx)(s.p,{children:"例子:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",children:'console.show();\nvar res = http.get("www.qq.com");\nconsole.log("HTTP Headers:");\nfor (var headerName in res.headers) {\n    console.log("%s: %s", headerName, res.headers[headerName]);\n}\n'})}),"\n",(0,r.jsxs)(s.h2,{id:"responsebody",children:["Response.body",(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#responsebody",children:"#"})]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"{Object}"}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"当前响应的内容。他有以下属性和函数："}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"bytes() {Array} 以字节数组形式返回响应内容"}),"\n",(0,r.jsx)(s.li,{children:"string() {string} 以字符串形式返回响应内容"}),"\n",(0,r.jsx)(s.li,{children:"json() {Object} 把响应内容作为 JSON 格式的数据并调用 JSON.parse，返回解析后的对象"}),"\n",(0,r.jsx)(s.li,{children:"contentType {string} 当前响应的内容类型"}),"\n"]}),"\n",(0,r.jsxs)(s.h2,{id:"responserequest",children:["Response.request",(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#responserequest",children:"#"})]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"{Request}\n当前响应所对应的请求。参见[Request][]。"}),"\n"]}),"\n",(0,r.jsxs)(s.h2,{id:"responseurl",children:["Response.url",(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#responseurl",children:"#"})]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"{number}\n当前响应所对应的请求 URL。"}),"\n"]}),"\n",(0,r.jsxs)(s.h2,{id:"responsemethod",children:["Response.method",(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#responsemethod",children:"#"})]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:'{string}\n当前响应所对应的 HTTP 请求的方法。例如"GET", "POST", "PUT"等。'}),"\n"]})]})}function a(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:s}=Object.assign({},(0,t.ah)(),e.components);return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}let i=a;a.__RSPRESS_PAGE_META={},a.__RSPRESS_PAGE_META["v1%2F%E5%9F%BA%E7%A1%80%2Fhttp.md"]={toc:[{text:"http.get(url[, options, callback])",id:"httpgeturl-options-callback",depth:2},{text:"http.post(url, data[, options, callback])",id:"httpposturl-data-options-callback",depth:2},{text:"http.postJson(url[, data, options, callback])",id:"httppostjsonurl-data-options-callback",depth:2},{text:"http.postMultipart(url, files[, options, callback])",id:"httppostmultiparturl-files-options-callback",depth:2},{text:"http.request(url[, options, callback])",id:"httprequesturl-options-callback",depth:2},{text:"Response.statusCode",id:"responsestatuscode",depth:2},{text:"Response.statusMessage",id:"responsestatusmessage",depth:2},{text:"Response.headers",id:"responseheaders",depth:2},{text:"Response.body",id:"responsebody",depth:2},{text:"Response.request",id:"responserequest",depth:2},{text:"Response.url",id:"responseurl",depth:2},{text:"Response.method",id:"responsemethod",depth:2}],title:"Response",headingTitle:"Response",frontmatter:{}}}}]);