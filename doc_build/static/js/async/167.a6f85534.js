"use strict";(self.webpackChunkrepress_demo=self.webpackChunkrepress_demo||[]).push([["167"],{3815:function(e,n,s){s.r(n),s.d(n,{default:()=>c});var r=s(2676),i=s(453);function d(e){let n=Object.assign({h1:"h1",a:"a",div:"div",p:"p",strong:"strong",code:"code",pre:"pre",ul:"ul",li:"li",img:"img",h2:"h2"},(0,i.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"sensors",children:["Sensors",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#sensors",children:"#"})]}),"\n",(0,r.jsxs)(n.div,{className:"rspress-directive tip",children:[(0,r.jsx)(n.div,{className:"rspress-directive-title",children:"稳定性: 稳定"}),(0,r.jsx)(n.div,{className:"rspress-directive-content",children:"\n"})]}),"\n",(0,r.jsxs)(n.p,{children:["sensors 模块提供了获取手机上的传感器的信息的支持，这些传感器包括距离传感器、光线光感器、重力传感器、方向传感器等。需要指出的是，脚本只能获取传感器的数据，",(0,r.jsx)(n.strong,{children:"不能模拟或伪造传感器的数据和事件"}),"，因此诸如模拟摇一摇的功能是无法实现的。"]}),"\n",(0,r.jsxs)(n.p,{children:["要监听一个传感器时，需要使用",(0,r.jsx)(n.code,{children:"sensors.register()"}),"注册监听器，之后才能开始监听；不需要监听时则调用",(0,r.jsx)(n.code,{children:"sensors.unregister()"}),"注销监听器。在脚本结束时会自动注销所有的监听器。同时，这种监听会使脚本保持运行状态，如果不注销监听器，脚本会一直保持运行状态。"]}),"\n",(0,r.jsx)(n.p,{children:"例如，监听光线传感器的代码为："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'//光线传感器监听\nsensors.register("light").on("change", (event, light) => {\n    log("当前光强度为", light);\n});\n'})}),"\n",(0,r.jsxs)(n.p,{children:["要注意的是，每个传感器的数据并不相同，所以对他们调用",(0,r.jsx)(n.code,{children:"on()"}),"监听事件时的回调函数参数也不是相同，例如光线传感器参数为",(0,r.jsx)(n.code,{children:"(event, light)"}),"，加速度传感器参数为",(0,r.jsx)(n.code,{children:"(event, ax, ay, az)"}),"。甚至在某些设备上的传感器参数有所增加，例如华为手机的距离传感器为三个参数，一般手机只有一个参数。"]}),"\n",(0,r.jsx)(n.p,{children:"常用的传感器及其事件参数如下表："}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"accelerometer"})," 加速度传感器，参数",(0,r.jsx)(n.code,{children:"(event, ax, ay, az)"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"event"})," ",(0,r.jsx)(n.a,{href:"#sensorevent",children:"SensorEvent"})," 传感器事件，用于获取传感器数据变化时的所有信息"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ax"})," {number} x 轴上的加速度，单位 m/s^2"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ay"})," {number} y 轴上的加速度，单位 m/s^2"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"az"})," {number} z 轴上的加速度，单位 m/s^2\n这里的 x 轴，y 轴，z 轴所属的坐标系统如下图(其中 z 轴垂直于设备屏幕表面):"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["!",(0,r.jsx)(n.img,{src:"#images/axis_device.png",alt:"axis_device"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"orientation"})," 方向传感器，参数",(0,r.jsx)(n.code,{children:"(event, azimuth, pitch, roll)"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"event"})," ",(0,r.jsx)(n.a,{href:"#sensorevent",children:"SensorEvent"})," 传感器事件，用于获取传感器数据变化时的所有信息"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"azimuth"})," {number} 方位角，从地磁指北方向线起，依顺时针方向到 y 轴之间的水平夹角，单位角度，范围 0~359"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"pitch"})," {number} 绕 x 轴旋转的角度，当设备水平放置时该值为 0，当设备顶部翘起时该值为正数，当设备尾部翘起时该值为负数，单位角度，范围-180~180"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"roll"})," {number} 绕 y 轴顺时针旋转的角度，单位角度，范围-90~90"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"gyroscope"})," 陀螺仪传感器，参数",(0,r.jsx)(n.code,{children:"(event, wx, wy, wz)"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"event"})," ",(0,r.jsx)(n.a,{href:"#sensorevent",children:"SensorEvent"})," 传感器事件，用于获取传感器数据变化时的所有信息"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"wx"})," {number} 绕 x 轴的角速度，单位弧度/s"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"wy"})," {number} 绕 y 轴的角速度，单位弧度/s"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"wz"})," {number} 绕 z 轴的角速度，单位弧度/s"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"magnetic_field"})," 磁场传感器，参数",(0,r.jsx)(n.code,{children:"(event, bx, by, bz)"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"event"})," ",(0,r.jsx)(n.a,{href:"#sensorevent",children:"SensorEvent"})," 传感器事件，用于获取传感器数据变化时的所有信息"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"bx"})," {number} x 轴上的磁场强度，单位 uT"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"by"})," {number} y 轴上的磁场强度，单位 uT"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"bz"})," {number} z 轴上的磁场强度，单位 uT"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"gravity"})," 重力传感器，参数",(0,r.jsx)(n.code,{children:"(event, gx, gy, gz)"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"event"})," ",(0,r.jsx)(n.a,{href:"#sensorevent",children:"SensorEvent"})," 传感器事件，用于获取传感器数据变化时的所有信息"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"gx"})," {number} x 轴上的重力加速度，单位 m/s^2"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"gy"})," {number} y 轴上的重力加速度，单位 m/s^2"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"gz"})," {number} z 轴上的重力加速度，单位 m/s^2"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"linear_acceleration"})," 线性加速度传感器，参数",(0,r.jsx)(n.code,{children:"(event, ax, ay, az)"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"event"})," ",(0,r.jsx)(n.a,{href:"#sensorevent",children:"SensorEvent"})," 传感器事件，用于获取传感器数据变化时的所有信息"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ax"})," {number} x 轴上的线性加速度，单位 m/s^2"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ay"})," {number} y 轴上的线性加速度，单位 m/s^2"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"az"})," {number} z 轴上的线性加速度，单位 m/s^2"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"ambient_temperature"})," 环境温度传感器，大部分设备并不支持，参数",(0,r.jsx)(n.code,{children:"(event, t)"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"event"})," ",(0,r.jsx)(n.a,{href:"#sensorevent",children:"SensorEvent"})," 传感器事件，用于获取传感器数据变化时的所有信息"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"t"})," {number} 环境温度，单位摄氏度。"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"light"})," 光线传感器，参数",(0,r.jsx)(n.code,{children:"(event, light)"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"event"})," ",(0,r.jsx)(n.a,{href:"#sensorevent",children:"SensorEvent"})," 传感器事件，用于获取传感器数据变化时的所有信息"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"light"})," {number} 环境光强度，单位 lux"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"pressure"})," 压力传感器，参数",(0,r.jsx)(n.code,{children:"(event, p)"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"event"})," ",(0,r.jsx)(n.a,{href:"#sensorevent",children:"SensorEvent"})," 传感器事件，用于获取传感器数据变化时的所有信息"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"p"})," {number} 大气压，单位 hPa"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"proximity"})," 距离传感器，参数",(0,r.jsx)(n.code,{children:"(event, distance)"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"event"})," ",(0,r.jsx)(n.a,{href:"#sensorevent",children:"SensorEvent"})," 传感器事件，用于获取传感器数据变化时的所有信息"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"distance"})," {number} 一般指设备前置摄像头旁边的距离传感器到前方障碍物的距离，并且很多设备上这个值只有两种情况：当障碍物较近时该值为 0，当障碍物较远或在范围内没有障碍物时该值为 5"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"relative_humidity"})," 湿度传感器，大部分设备并不支持，参数",(0,r.jsx)(n.code,{children:"(event, rh)"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"event"})," ",(0,r.jsx)(n.a,{href:"#sensorevent",children:"SensorEvent"})," 传感器事件，用于获取传感器数据变化时的所有信息"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"rh"})," {number} 相对湿度，范围为 0~100（百分比）"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.h2,{id:"sensorsregistersensorname-delay",children:["sensors.register(sensorName[, delay])",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#sensorsregistersensorname-delay",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"sensorName"})," {string} 传感器名称，常用的传感器名称如上面所述"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"delay"})," {number} 传感器数据更新频率，可选，默认为",(0,r.jsx)(n.code,{children:"sensors.delay.normal"}),"。可用的值如下：","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"sensors.delay.normal"})," 正常频率"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"sensors.delay.ui"})," 适合于用户界面的更新频率"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"sensors.delay.game"})," 适合于游戏的更新频率"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"sensors.delay.fastest"})," 最快的更新频率】"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["返回 ",(0,r.jsx)(n.a,{href:"#sensoreventemitter",children:"SensorEventEmiiter"})]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["注册一个传感器监听并返回",(0,r.jsx)(n.a,{href:"#sensoreventemitter",children:"SensorEventEmitter"}),"。"]}),"\n",(0,r.jsx)(n.p,{children:"例如:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'console.show();\n//注册传感器监听\nvar sensor = sensors.register("gravity");\nif (sensor == null) {\n    toast("不支持重力传感器");\n    exit();\n}\n//监听数据\nsensor.on("change", (gx, gy, gz) => {\n    log("重力加速度: %d, %d, %d", gx, gy, gz);\n});\n'})}),"\n",(0,r.jsx)(n.p,{children:"可以通过 delay 参数来指定传感器数据的更新频率，例如："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'var sensor = sensors.register("gravity", sensors.delay.game);\n'})}),"\n",(0,r.jsxs)(n.p,{children:["另外，如果不支持",(0,r.jsx)(n.code,{children:"sensorName"}),"所指定的传感器，那么该函数将返回",(0,r.jsx)(n.code,{children:"null"}),"；但如果",(0,r.jsx)(n.code,{children:"sensors.ignoresUnsupportedSensor"}),"的值被设置为",(0,r.jsx)(n.code,{children:"true"}),", 则该函数会返回一个不会分发任何传感器事件的",(0,r.jsx)(n.a,{href:"#sensoreventemitter",children:"SensorEventEmitter"}),"。"]}),"\n",(0,r.jsx)(n.p,{children:"例如:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'sensors.ignoresUnsupportedSensor = true;\n//无需null判断\nsensors.register("gravity").on("change", (gx, gy, gz) => {\n    log("重力加速度: %d, %d, %d", gx, gy, gz);\n});\n'})}),"\n",(0,r.jsxs)(n.p,{children:["更多信息，参见",(0,r.jsx)(n.a,{href:"#sensoreventemitter",children:"SensorEventEmitter"}),"和",(0,r.jsx)(n.a,{href:"#ignoresUnsupportedSensor",children:"sensors.ignoresUnsupportedSensor"}),"。"]}),"\n",(0,r.jsxs)(n.h2,{id:"sensorsunregisteremitter",children:["sensors.unregister(emitter)",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#sensorsunregisteremitter",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"emiiter"})," ",(0,r.jsx)(n.a,{href:"#sensoreventemitter",children:"SensorEventEmitter"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"注销该传感器监听器。被注销的监听器将不再能监听传感器数据。"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'//注册一个传感器监听器\nvar sensor = sensors.register("gravity");\nif (sensor == null) {\n    exit();\n}\n//2秒后注销该监听器\nsetTimeout(() => {\n    sensors.unregister(sensor);\n}, 2000);\n'})}),"\n",(0,r.jsxs)(n.h2,{id:"sensorsunregisterall",children:["sensors.unregisterAll()",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#sensorsunregisterall",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"注销所有传感器监听器。"}),"\n",(0,r.jsxs)(n.h2,{id:"sensorsignoresunsupportedsensor",children:["sensors.ignoresUnsupportedSensor",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#sensorsignoresunsupportedsensor",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"{boolean}"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["表示是否忽略不支持的传感器。如果该值被设置为",(0,r.jsx)(n.code,{children:"true"}),"，则函数",(0,r.jsx)(n.code,{children:"sensors.register()"}),"即使对不支持的传感器也会返回一个无任何数据的虚拟传感器监听，也就是",(0,r.jsx)(n.code,{children:"sensors.register()"}),"不会返回",(0,r.jsx)(n.code,{children:"null"}),"从而避免非空判断，并且此时会触发",(0,r.jsx)(n.code,{children:"sensors"}),'的"unsupported_sensor"事件。']}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'//忽略不支持的传感器\nsensors.ignoresUnsupportedSensor = true;\n//监听有不支持的传感器时的事件\nsensors.on("unsupported_sensor", function (sensorName) {\n    toastLog("不支持的传感器: " + sensorName);\n});\n//随便注册一个不存在的传感器。\nlog(sensors.register("aaabbb"));\n'})}),"\n",(0,r.jsxs)(n.h2,{id:"事件-unsupported_sensor",children:["事件: 'unsupported_sensor'",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#事件-unsupported_sensor",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"sensorName"})," {string} 不支持的传感器名称"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["当",(0,r.jsx)(n.code,{children:"sensors.ignoresUnsupportedSensor"}),"被设置为",(0,r.jsx)(n.code,{children:"true"}),"并且有不支持的传感器被注册时触发该事件。事件参数的传感器名称。"]}),"\n",(0,r.jsxs)(n.h1,{id:"sensoreventemitter",children:["SensorEventEmitter",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#sensoreventemitter",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"注册传感器返回的对象，其本身是一个 EventEmmiter，用于监听传感器事件。"}),"\n",(0,r.jsxs)(n.h2,{id:"事件-change",children:["事件: 'change'",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#事件-change",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"..args"})," {Any} 传感器参数"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["当传感器数据改变时触发该事件；该事件触发的最高频繁由",(0,r.jsx)(n.code,{children:"sensors.register()"}),"指定的 delay 参数决定。"]}),"\n",(0,r.jsx)(n.p,{children:"事件参数根据传感器类型不同而不同，具体参见本章最前面的列表。"}),"\n",(0,r.jsx)(n.p,{children:"一个监听光线传感器和加速度传感器并且每 0.5 秒获取一个数据并最终写入一个 csv 表格文件的例子如下："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'//csv文件路径\ncosnt csvPath = "/sdcard/data.csv";\n//记录光线传感器的数据\nvar light = 0;\n//记录加速度传感器的数据\nvar ax = 0;\nvar ay = 0;\nvar az = 0;\n//监听光线传感器\nsensors.register("light", sensors.delay.fastest)\n    .on("change", l => {\n        light = l;\n    });\n//监听加速度传感器\nsensors.register("accelerometer", sensors.delay.fastest)\n    .on("change", (ax0, ay0, az0) => {\n        ax = ax0;\n        ay = ay0;\n        az = az0;\n    });\n\nvar file = open(csvPath, "w");\n//写csv表格头\nfile.writeline("light,ax,ay,az")\n//每0.5秒获取一次数据并写入文件\nsetInterval(()=>{\n    file.writeline(util.format("%d,%d,%d,%d", light, ax, ay, az));\n}, 500);\n//10秒后退出并打开文件\nsetTimeout(()=>{\n    file.close();\n    sensors.unregsiterAll();\n    app.viewFile(csvPath);\n}, 10 * 1000);\n\n'})}),"\n",(0,r.jsxs)(n.h2,{id:"事件-accuracy_change",children:["事件: 'accuracy_change'",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#事件-accuracy_change",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"accuracy"})," {number} 表示传感器精度。为以下值之一:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"-1 传感器未连接"}),"\n",(0,r.jsx)(n.li,{children:"0 传感器不可读"}),"\n",(0,r.jsx)(n.li,{children:"1 低精度"}),"\n",(0,r.jsx)(n.li,{children:"2 中精度"}),"\n",(0,r.jsx)(n.li,{children:"3 高精度"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"当传感器精度改变时会触发的事件。比较少用。"})]})}function l(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}let c=l;l.__RSPRESS_PAGE_META={},l.__RSPRESS_PAGE_META["v1%2F%E9%AB%98%E7%BA%A7%2Fsensors.md"]={toc:[{text:"sensors.register(sensorName[, delay])",id:"sensorsregistersensorname-delay",depth:2},{text:"sensors.unregister(emitter)",id:"sensorsunregisteremitter",depth:2},{text:"sensors.unregisterAll()",id:"sensorsunregisterall",depth:2},{text:"sensors.ignoresUnsupportedSensor",id:"sensorsignoresunsupportedsensor",depth:2},{text:"事件: 'unsupported_sensor'",id:"事件-unsupported_sensor",depth:2},{text:"事件: 'change'",id:"事件-change",depth:2},{text:"事件: 'accuracy_change'",id:"事件-accuracy_change",depth:2}],title:"SensorEventEmitter",headingTitle:"SensorEventEmitter",frontmatter:{}}}}]);